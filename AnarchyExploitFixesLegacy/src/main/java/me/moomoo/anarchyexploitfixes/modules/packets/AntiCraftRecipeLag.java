package me.moomoo.anarchyexploitfixes.modules.packets;

import com.github.retrooper.packetevents.PacketEvents;
import com.github.retrooper.packetevents.event.PacketListenerAbstract;
import com.github.retrooper.packetevents.event.PacketListenerPriority;
import com.github.retrooper.packetevents.event.PacketReceiveEvent;
import com.github.retrooper.packetevents.protocol.packettype.PacketType;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.LogUtil;
import me.moomoo.anarchyexploitfixes.utils.models.ExpiringSet;

import java.time.Duration;
import java.util.UUID;
import java.util.logging.Level;

public class AntiCraftRecipeLag extends PacketListenerAbstract implements AnarchyExploitFixesModule {

    private final ExpiringSet<UUID> recipeCooldowns;

    public AntiCraftRecipeLag() {
        super(PacketListenerPriority.HIGHEST);
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.prevent-crafting-recipe-lag-exploit.enable",
                "Prevent lagging the server by spamming the crafting recipe book.");
        this.recipeCooldowns = new ExpiringSet<>(Duration.ofMillis(
                Math.max(1, config.getInt("patches.prevent-crafting-recipe-lag-exploit.crafting-recipe-delay-in-ticks", 5,
                "How many ticks a player needs to wait to be able to use the crafting recipe book again")) * 50L
        ));
    }

    @Override
    public String name() {
        return "prevent-crafting-recipe-lag-exploit";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        PacketEvents.getAPI().getEventManager().registerListener(this);
    }

    @Override
    public boolean shouldEnable() {
        if (AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-crafting-recipe-lag-exploit.enable", true)) {
            if (AnarchyExploitFixes.getConfiguration().packet_events_disabled) {
                LogUtil.moduleLog(Level.WARNING, name(), "Not patching exploit because you disabled packet events in config!");
                return false;
            }
            return true;
        }
        return false;
    }

    @Override
    public void onPacketReceive(PacketReceiveEvent event) {
        if (event.getPacketType() != PacketType.Play.Client.CRAFT_RECIPE_REQUEST) return;

        if (recipeCooldowns.contains(event.getUser().getUUID())) {
            event.setCancelled(true);
        } else {
            recipeCooldowns.add(event.getUser().getUUID());
        }
    }
}
