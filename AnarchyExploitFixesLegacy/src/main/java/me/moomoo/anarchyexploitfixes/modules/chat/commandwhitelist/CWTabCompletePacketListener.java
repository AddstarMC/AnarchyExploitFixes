package me.moomoo.anarchyexploitfixes.modules.chat.commandwhitelist;

import com.github.retrooper.packetevents.event.PacketListenerAbstract;
import com.github.retrooper.packetevents.event.PacketListenerPriority;
import com.github.retrooper.packetevents.event.PacketReceiveEvent;
import com.github.retrooper.packetevents.protocol.packettype.PacketType;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientTabComplete;
import com.github.retrooper.packetevents.wrapper.play.server.WrapperPlayServerTabComplete;
import me.moomoo.anarchyexploitfixes.enums.AEFPermission;
import me.moomoo.anarchyexploitfixes.utils.CachingPermTool;
import me.moomoo.anarchyexploitfixes.utils.CommandUtil;
import org.bukkit.entity.Player;

import java.util.List;
import java.util.Set;
import java.util.stream.Collectors;

public class CWTabCompletePacketListener extends PacketListenerAbstract {

    private final Set<String> allowedCommands;

    protected CWTabCompletePacketListener(Set<String> allowedCommands) {
        super(PacketListenerPriority.HIGHEST);
        this.allowedCommands = allowedCommands;
    }

    @Override
    public void onPacketReceive(PacketReceiveEvent event) {
        if (event.getPacketType() != PacketType.Play.Client.TAB_COMPLETE) return;
        final WrapperPlayClientTabComplete request = new WrapperPlayClientTabComplete(event);
        final String text = request.getText();
        if (!text.startsWith("/")) return;

        final Player player = (Player) event.getPlayer();
        if (player == null || CachingPermTool.hasPermission(AEFPermission.BYPASS_CMD_WHITELIST, player)) return;

        if (!text.contains(" ")) {
            final String command = text.split(" ")[0].substring(1).toLowerCase();

            final List<WrapperPlayServerTabComplete.CommandMatch> completions = allowedCommands.stream()
                    .filter(whitelisted -> whitelisted.startsWith(command))
                    .map(whitelisted -> new WrapperPlayServerTabComplete.CommandMatch("/" + whitelisted, null))
                    .collect(Collectors.toList());

            WrapperPlayServerTabComplete response = new WrapperPlayServerTabComplete(
                    0,
                    new WrapperPlayServerTabComplete.CommandRange(0, completions.size() - 1),
                    completions
            );

            response.write();

            event.getUser().sendPacket(response);
            event.setCancelled(true);
        }

        else if (!allowedCommands.contains(CommandUtil.getCommandLabel(text).toLowerCase())) {
            event.setCancelled(true);
        }
    }
}
