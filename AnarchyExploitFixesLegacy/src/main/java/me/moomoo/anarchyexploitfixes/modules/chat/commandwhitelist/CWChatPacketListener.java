package me.moomoo.anarchyexploitfixes.modules.chat.commandwhitelist;

import com.github.retrooper.packetevents.event.PacketListenerAbstract;
import com.github.retrooper.packetevents.event.PacketListenerPriority;
import com.github.retrooper.packetevents.event.PacketReceiveEvent;
import com.github.retrooper.packetevents.protocol.packettype.PacketType;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientChatCommand;
import com.github.retrooper.packetevents.wrapper.play.client.WrapperPlayClientChatMessage;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.enums.AEFPermission;
import me.moomoo.anarchyexploitfixes.utils.CachingPermTool;
import me.moomoo.anarchyexploitfixes.utils.CommandUtil;
import org.bukkit.entity.Player;

import java.util.Set;

public class CWChatPacketListener extends PacketListenerAbstract {

    /*
     *     Credits go to japflap (https://www.spigotmc.org/resources/commandwhitelist.2452/)
     *     Code was mainly only implemented into AEF by xGinko.
     */

    private final Set<String> allowedCommands, bannedSubCommands;
    private final boolean shouldLog;

    protected CWChatPacketListener(Set<String> allowedCommands, Set<String> bannedSubCommands, boolean shouldLog) {
        super(PacketListenerPriority.HIGHEST);
        this.allowedCommands = allowedCommands;
        this.bannedSubCommands = bannedSubCommands;
        this.shouldLog = shouldLog;
    }

    @Override
    public void onPacketReceive(PacketReceiveEvent event) {
        String message;
        if (event.getPacketType() == PacketType.Play.Client.CHAT_MESSAGE) {
            message = new WrapperPlayClientChatMessage(event).getMessage();
            if (!message.startsWith("/")) return;
        } else if (event.getPacketType() == PacketType.Play.Client.CHAT_COMMAND) {
            message = new WrapperPlayClientChatCommand(event).getCommand();
        } else {
            return;
        }

        final Player player = (Player) event.getPlayer();
        if (player == null || CachingPermTool.hasPermission(AEFPermission.BYPASS_CMD_WHITELIST, player)) return;

        if (!allowedCommands.contains(CommandUtil.getCommandLabel(message).toLowerCase())) {
            event.setCancelled(true);
            player.sendMessage(AnarchyExploitFixes.getLang(player.getLocale()).chat_CommandWhitelist_BadCommand);
            if (shouldLog)
                AnarchyExploitFixes.getPrefixedLogger().info(player.getName() + " tried to execute a non whitelisted command: " + message);
            return;
        }

        for (String bannedSubCommand : bannedSubCommands) {
            if (message.toLowerCase().substring(1).startsWith(bannedSubCommand)) {
                event.setCancelled(true);
                player.sendMessage(AnarchyExploitFixes.getLang(player.getLocale()).chat_CommandWhitelist_BadCommand);
                if (shouldLog)
                    AnarchyExploitFixes.getPrefixedLogger().info(player.getName() + " tried to execute a blacklisted subcommand: " + message);
                return;
            }
        }
    }
}
