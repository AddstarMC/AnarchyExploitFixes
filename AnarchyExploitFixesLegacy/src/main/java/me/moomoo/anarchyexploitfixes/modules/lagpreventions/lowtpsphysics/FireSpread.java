package me.moomoo.anarchyexploitfixes.modules.lagpreventions.lowtpsphysics;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockIgniteEvent;

public class FireSpread implements AEFModule, Listener {

    private final double disableFireTPS;
    private final boolean logIsEnabled;

    public FireSpread() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.disableFireTPS = config.getDouble(configPath() + ".disable-TPS", 14.0);
        this.logIsEnabled = config.getBoolean(configPath() + ".log", false);
    }

    @Override
    public String configPath() {
        return "lag-preventions.disable-physics-during-low-tps.fire-spread";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean(configPath() + ".enable", false);
    }

    @EventHandler(priority = EventPriority.LOWEST)
    private void onLiquidSpread(BlockIgniteEvent event) {
        if (AnarchyExploitFixes.getTPSCache().getTPS() <= disableFireTPS) {
            event.setCancelled(true);
            if (logIsEnabled) info("Stopped fire spread because tps is lower than " + disableFireTPS);
        }
    }
}
