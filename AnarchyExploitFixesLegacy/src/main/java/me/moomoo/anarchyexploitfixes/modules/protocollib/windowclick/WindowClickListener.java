package me.moomoo.anarchyexploitfixes.modules.protocollib.windowclick;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketContainer;
import com.comphenix.protocol.events.PacketEvent;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;

public class WindowClickListener extends PacketAdapter {

    private final int index_slot, index_button, index_clickType;

    public WindowClickListener() {
        super(AnarchyExploitFixes.getInstance(), ListenerPriority.HIGHEST, PacketType.Play.Client.WINDOW_CLICK);
        this.index_slot = AnarchyExploitFixes.getMCVersion() > 12 ? 2 : 1;
        this.index_button = AnarchyExploitFixes.getMCVersion() > 12 ? 3 : 2;
        this.index_clickType = AnarchyExploitFixes.getMCVersion() > 12 ? 4 : 5;
    }

    protected void register() {
        ProtocolLibrary.getProtocolManager().addPacketListener(this);
    }

    @Override
    public void onPacketReceiving(PacketEvent event) {
        final PacketContainer packet = event.getPacket();
        if (this.getClickType(packet) != InventoryClickType.SWAP) return;

        if (this.getButton(packet) < 0 || this.getSlot(packet) < 0) {
            event.setCancelled(true);
        }
    }

    private int getSlot(PacketContainer packet) {
        return packet.getIntegers().read(index_slot);
    }

    private int getButton(PacketContainer packet) {
        return packet.getIntegers().read(index_button);
    }

    private enum InventoryClickType {
        PICKUP, QUICK_MOVE, SWAP, CLONE, THROW, QUICK_CRAFT, PICKUP_ALL
    }

    private InventoryClickType getClickType(PacketContainer packet) {
        return packet.getEnumModifier(InventoryClickType.class, index_clickType).read(0);
    }
}