package me.moomoo.anarchyexploitfixes.modules;

import com.github.retrooper.packetevents.PacketEvents;
import com.github.retrooper.packetevents.event.PacketListenerAbstract;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.bedrock.*;
import me.moomoo.anarchyexploitfixes.modules.chat.PreventPluginScanning;
import me.moomoo.anarchyexploitfixes.modules.chat.commandwhitelist.CommandWhitelist;
import me.moomoo.anarchyexploitfixes.modules.chunklimits.*;
import me.moomoo.anarchyexploitfixes.modules.combat.*;
import me.moomoo.anarchyexploitfixes.modules.dupepreventions.*;
import me.moomoo.anarchyexploitfixes.modules.elytra.*;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.*;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.datavalues.CustomDataValues;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.datavalues.IllegalGoldenApples;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.HigherEnchants;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.InapplicableEnchants;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.IncompatibleEnchants;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.nbt.CustomNBTFilter;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.nbt.NBTFilledStorageItem;
import me.moomoo.anarchyexploitfixes.modules.illegals.placedblocks.PeriodicallyRemoveIllegalBlocks;
import me.moomoo.anarchyexploitfixes.modules.illegals.placedblocks.RemoveIllegalBlocksOnChunkload;
import me.moomoo.anarchyexploitfixes.modules.illegals.placedblocks.RemoveUnnaturalSpawners;
import me.moomoo.anarchyexploitfixes.modules.lagpreventions.*;
import me.moomoo.anarchyexploitfixes.modules.lagpreventions.lowtpsphysics.*;
import me.moomoo.anarchyexploitfixes.modules.misc.FirstJoinMessages;
import me.moomoo.anarchyexploitfixes.modules.misc.JoinLeaveMessages;
import me.moomoo.anarchyexploitfixes.modules.misc.MaskKickMessages;
import me.moomoo.anarchyexploitfixes.modules.misc.PreventMessageKick;
import me.moomoo.anarchyexploitfixes.modules.packets.*;
import me.moomoo.anarchyexploitfixes.modules.patches.*;
import me.moomoo.anarchyexploitfixes.modules.patches.crashexploits.*;
import me.moomoo.anarchyexploitfixes.modules.preventions.*;
import me.moomoo.anarchyexploitfixes.modules.preventions.blockbreak.PistonExplodePermBlockRemoval;
import me.moomoo.anarchyexploitfixes.modules.preventions.blockbreak.PistonPlaceWhileRetractPermBlockRemoval;
import me.moomoo.anarchyexploitfixes.modules.preventions.blockbreak.StructureGrowPermBlockRemoval;
import me.moomoo.anarchyexploitfixes.modules.preventions.portals.*;
import me.moomoo.anarchyexploitfixes.modules.preventions.withers.*;
import org.bukkit.event.HandlerList;

import java.util.HashSet;

public interface AEFModule {

    String name();
    String category();
    void enable();
    boolean shouldEnable();

    HashSet<AEFModule> modules = new HashSet<>();

    static void disableAll() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getScheduler().cancelTasks(plugin);
        HandlerList.unregisterAll(plugin);
        for (AEFModule module : modules) {
            if (module instanceof PacketListenerAbstract) {
                PacketEvents.getAPI().getEventManager().unregisterListener((PacketListenerAbstract) module);
            }
        }
        modules.clear();
    }

    static void reloadModules() {
        disableAll();

        /*
            Bedrock
        */
        modules.add(new FillNetherCeilingOnChunkload());
        modules.add(new FillNetherFloorOnChunkload());
        modules.add(new FillOverworldFloorOnChunkload());
        modules.add(new PeriodicallyFillNetherCeiling());
        modules.add(new PeriodicallyFillNetherFloor());
        modules.add(new PeriodicallyFillOverworldFloor());
        modules.add(new PreventGoingBelowBedrockFloor());
        /*
            Chat
        */
        modules.add(new CommandWhitelist());
        modules.add(new PreventPluginScanning());
        /*
            Chunk Limits
        */
        modules.add(new BlockLimit());
        modules.add(new CustomEntityLimit());
        modules.add(new ExpBottleLimit());
        modules.add(new FallingBlockLimit());
        modules.add(new MinecartLimit());
        modules.add(new VehicleLimit());
        modules.add(new NonLivingEntityLimit());
        modules.add(new DroppedItemLimit());
        modules.add(new VillagerLimit());
        /*
            Dupe Preventions
        */
        modules.add(new ChestedEntitiesInPortals());
        modules.add(new ChestsOnEntities());
        modules.add(new CloseEntitiyInventoriesOnLogout());
        modules.add(new CloseEntityInventoryOnChunkUnload());
        modules.add(new EndPortalDupe());
        /*
            Elytra
        */
        modules.add(new ElytraHelper());
        modules.add(new ElytraAtSpawn());
        modules.add(new ElytraGlobal());
        modules.add(new ElytraOnCeiling());
        modules.add(new ElytraPacketFly());
        /*
            Illegals
        */
        // Blocks
        modules.add(new RemoveIllegalBlocksOnChunkload());
        modules.add(new PeriodicallyRemoveIllegalBlocks());
        modules.add(new RemoveUnnaturalSpawners());
        // Items
        // DataValues
        modules.add(new IllegalGoldenApples());
        modules.add(new CustomDataValues());
        // Enchantments
        modules.add(new HigherEnchants());
        modules.add(new InapplicableEnchants());
        modules.add(new IncompatibleEnchants());
        // Other
        modules.add(new OverstackedItems());
        modules.add(new UnbreakableItems());
        modules.add(new BannedMaterials());
        modules.add(new SpawnEggItems());
        modules.add(new PlayerHeadItems());
        modules.add(new BannedItemNames());
        // NBT
        modules.add(new NBTFilledStorageItem());
        modules.add(new CustomNBTFilter());

        /*
            Lag Preventions
        */
        modules.add(new LeverSpam());
        modules.add(new SnowballExploit());
        modules.add(new FallingBlockStasis());
        modules.add(new InventoryActionLag());
        modules.add(new LiquidUpdateLag());
        modules.add(new PathfindingLimits());
        modules.add(new TargetDistanceLimit());
        modules.add(new Explosions());
        modules.add(new BlockPhysics());
        modules.add(new LiquidSpread());
        modules.add(new BlockMelting());
        modules.add(new Redstone());
        modules.add(new Noteblocks());
        modules.add(new FireSpread());
        modules.add(new GrassSpread());
        modules.add(new LeaveDecay());
        /*
            Misc
        */
        modules.add(new FirstJoinMessages());
        modules.add(new JoinLeaveMessages());
        modules.add(new MaskKickMessages());
        modules.add(new PreventMessageKick());
        /*
            Patches
        */
        modules.add(new BookBan());
        modules.add(new Burrow());
        modules.add(new CommandSign());
        modules.add(new GodMode());
        modules.add(new TeleportCoordExploit());
        modules.add(new BeehiveCoordinates());
        // Crash Exploits
        modules.add(new DispenserCrash());
        modules.add(new EndGatewayCrash());
        modules.add(new MultipleEnderdragons());
        modules.add(new RedstoneOnTrapdoorCrash());
        modules.add(new WorldChangeCrash());
        /*
            Combat
        */
        modules.add(new BowBomb());
        modules.add(new CrystalAuraDelay());
        modules.add(new AnchorAuraDelay());
        modules.add(new BedAuraDelay());
        modules.add(new PistonAuraDelay());
        modules.add(new CrystalAuraHotbarSwitchDelay());
        /*
            Preventions
        */
        modules.add(new BedTrap());
        modules.add(new DisableFish());
        modules.add(new NetherRoof());
        modules.add(new PreventNonSurvival());
        modules.add(new PreventOppedPlayers());
        modules.add(new MapSpam());
        // Blockbreak
        modules.add(new PistonExplodePermBlockRemoval());
        modules.add(new PistonPlaceWhileRetractPermBlockRemoval());
        modules.add(new StructureGrowPermBlockRemoval());
        // Portals
        modules.add(new EndPortalDestruction());
        modules.add(new PreventAllEntitiesInPortals());
        modules.add(new PreventPortalTraps());
        modules.add(new PreventProjectilesInPortals());
        modules.add(new PreventSpecificEntitiesInPortals());
        // Withers
        modules.add(new DisableWitherSkulls());
        modules.add(new RateLimitWitherSkulls());
        modules.add(new RemoveAllSkullsPeriodically());
        modules.add(new RemoveSkullsAfterXTicks());
        modules.add(new RemoveSkullsOnChunkload());
        modules.add(new RemoveSkullsOnChunkunload());
        modules.add(new WitherSpawningAtSpawn());
        /*
            Packet Modules
        */
        modules.add(new AntiNoCom());
        modules.add(new AntiBoatFly());
        modules.add(new AntiCraftRecipeLag());
        modules.add(new AntiWindowClickCrash());
        modules.add(new AntiLecternCrash());
        modules.add(new AntiTagParserCrash());

        for (AEFModule module : modules) {
            if (module.shouldEnable()) module.enable();
        }
    }
}
