package me.moomoo.anarchyexploitfixes.modules.illegals.items.playerheads;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.MaterialUtil;
import org.bukkit.SkullType;
import org.bukkit.block.Block;
import org.bukkit.block.Skull;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.player.PlayerInteractEvent;
import org.bukkit.inventory.meta.SkullMeta;

public class PreventPlacingPlayerHeads implements AnarchyExploitFixesModule, Listener {

    public PreventPlacingPlayerHeads() {}

    @Override
    public String name() {
        return "ban-player-heads.prevent-placing";
    }

    @Override
    public String category() {
        return "illegals";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("illegals.player-heads.prevent-placing", false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = false)
    private void onInteract(PlayerInteractEvent event) {
        if (event.getAction() != Action.RIGHT_CLICK_BLOCK || event.getAction() != Action.RIGHT_CLICK_AIR) return;
        if (!MaterialUtil.PLAYER_HEADS.contains(event.getMaterial())) return;

        if (((SkullMeta) event.getItem().getItemMeta()).hasOwner()) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockPlace(BlockPlaceEvent event) {
        final Block block = event.getBlock();
        if (!MaterialUtil.PLAYER_HEADS.contains(block.getType())) return;

        final Skull skull = (Skull) block.getState();

        if (skull.getSkullType() == SkullType.PLAYER || skull.hasOwner()) {
            event.setCancelled(true);
        }
    }
}
