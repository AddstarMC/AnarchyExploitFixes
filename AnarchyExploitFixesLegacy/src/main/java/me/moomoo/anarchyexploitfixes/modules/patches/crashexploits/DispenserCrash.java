package me.moomoo.anarchyexploitfixes.modules.patches.crashexploits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import me.moomoo.anarchyexploitfixes.utils.ChunkUtil;
import me.moomoo.anarchyexploitfixes.utils.LogUtil;
import org.bukkit.World;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;

import java.util.logging.Level;

public class DispenserCrash implements AEFModule, Listener {

    private final boolean logIsEnabled;

    public DispenserCrash() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.crash-exploits.prevent-dispenser-crash.enable",
                "Prevents dispensers from crashing the server when dispensing items out of bounds: https://www.youtube.com/watch?v=XL17P87O6xA");
        this.logIsEnabled = config.getBoolean("patches.crash-exploits.prevent-dispenser-crash.log", false);
    }

    @Override
    public String name() {
        return "prevent-dispenser-crash";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.crash-exploits.prevent-dispenser-crash.enable", true);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onDispense(BlockDispenseEvent event) {
        World world = event.getBlock().getWorld();
        if (event.getBlock().getY() >= world.getMaxHeight() - 1 || event.getBlock().getY() <= ChunkUtil.guessMinWorldHeight(world)) {
            event.setCancelled(true);
            if (logIsEnabled) LogUtil.moduleLog(Level.INFO, name(),"Prevented a dispenser from crashing the server at: "
                    +event.getBlock().getLocation());
        }
    }
}
