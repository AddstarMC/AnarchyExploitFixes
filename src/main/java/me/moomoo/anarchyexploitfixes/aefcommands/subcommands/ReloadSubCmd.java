package me.moomoo.anarchyexploitfixes.aefcommands.subcommands;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.aefcommands.SubCommand;
import me.moomoo.anarchyexploitfixes.config.Config;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.command.CommandSender;
import org.jetbrains.annotations.NotNull;

public class ReloadSubCmd extends SubCommand {

    @Override
    public String getName() {
        return "reload";
    }
    @Override
    public String getDescription() {
        return "Reload the plugin configuration.";
    }
    @Override
    public String getSyntax() {
        return "/aef reload";
    }

    @Override
    public void perform(@NotNull CommandSender sender, String[] args) {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        Config config = AnarchyExploitFixes.getConfiguration();

        if (sender.hasPermission("aef.reload")) {
            sender.sendMessage(ChatColor.WHITE + "Reloading AnarchyExploitFixes...");
            plugin.reloadLang();
            plugin.reloadAEFConfig();

            if (!Bukkit.getVersion().contains("1.12")) {
                plugin.getConfig().set("RemoveALLIllegalBlocksOnCHUNKLOAD", false);
                plugin.getConfig().set("FillInBedrockFloor", false);
                plugin.getConfig().set("FillInBedrockRoof", false);
                plugin.getConfig().set("ExperimentalDupePatch2", false);
                plugin.getLogger().warning("Disabled:\nRemoveALLIllegalBlocksOnCHUNKLOAD\nFillInBedrockFloor\nFillInBedrockRoof\nExperimentalDupePatch2\nDue to errors with non 1.12.2 versions.");
            } else {
                plugin.getConfig().set("DisableFish", false);
                plugin.getLogger().warning("Disabled:\nDisableFish\nbecause server is 1.12");
            }

            sender.sendMessage(ChatColor.GREEN + "Reload complete.");
        } else {
            sender.sendMessage(ChatColor.RED + AnarchyExploitFixes.getLang(sender).noPermission);
        }
    }

}
