package me.moomoo.anarchyexploitfixes.protocollib;

import com.comphenix.protocol.ProtocolLibrary;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.protocollib.elytra.ElytraAtSpawn;
import me.moomoo.anarchyexploitfixes.protocollib.elytra.ElytraGlobal;
import me.moomoo.anarchyexploitfixes.protocollib.elytra.ElytraOnCeiling;
import me.moomoo.anarchyexploitfixes.protocollib.nocom.NoComBlockDigPacket;
import me.moomoo.anarchyexploitfixes.protocollib.nocom.NoComUseItemPacket;

import java.util.HashSet;

public interface AEFProtocolLibModule {

    String name();
    String category();
    void enable();
    boolean shouldEnable();

    HashSet<AEFProtocolLibModule> modules = new HashSet<>();

    static void reloadModules() {
        modules.clear();
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        ProtocolLibrary.getProtocolManager().removePacketListeners(plugin);

        modules.add(new NoComBlockDigPacket(plugin));
        if (AnarchyExploitFixes.getMCVersion() <= 12) {
            modules.add(new NoComUseItemPacket(plugin));
        }

        modules.add(new ElytraGlobal(plugin));
        modules.add(new ElytraAtSpawn(plugin));
        modules.add(new ElytraOnCeiling(plugin));

        modules.add(new BoatFlyPatch(plugin));
        modules.add(new PacketFlyPatch(plugin));
        modules.add(new CraftingRecipeLagPatch(plugin));

        for (AEFProtocolLibModule module : modules) {
            if (module.shouldEnable()) module.enable();
            if (module.name() != null) plugin.enabledModules.put("<" + module.category() + "> " + module.name(), module.shouldEnable());
        }
    }
}
