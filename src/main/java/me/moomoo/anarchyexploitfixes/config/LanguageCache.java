package me.moomoo.anarchyexploitfixes.config;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import org.bukkit.configuration.InvalidConfigurationException;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.File;
import java.io.IOException;

public class LanguageCache {
    private final FileConfiguration fileConfiguration;
    boolean addedMissing = false;
    public String noPermission, command_Whitelist_BadCommand, youNeedToBeXBlocksAwayToTP, nickResetOnly, thisIsNotTheWorldsize, chat_ChatCoFix_SpecifyAPlayer,
            joinMessage, leaveMessage, firstJoinMessage;
    public LanguageCache(String lang) {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        File langFile = new File(plugin.getDataFolder() + File.separator + "lang", lang + ".yml");
        fileConfiguration = new YamlConfiguration();

        if (!langFile.exists()) {
            langFile.getParentFile().mkdirs();
            plugin.saveResource("lang" + File.separator + lang + ".yml", false);
        }
        try {
            fileConfiguration.load(langFile);

            // No Permission
            this.noPermission = getStringTranslation("no-permission", "You don't have permission to use this command.");

            // Chat
            this.chat_ChatCoFix_SpecifyAPlayer = getStringTranslation("chat.chatco-fix-specify-player", "&cYou didn't add a player name...");

            // Command Whitelist
            this.command_Whitelist_BadCommand = getStringTranslation("command-whitelist.bad-command", "&4Bad command. Type /help for a list of commands.");

            // 1b1t Options
            this.youNeedToBeXBlocksAwayToTP = getStringTranslation("1b1t-options.you-need-to-be-x-blocks-away-to-tp", "&9You need to be {0} blocks away from spawn to teleport!");
            this.nickResetOnly = getStringTranslation("1b1t-options.nickname-reset-only", "&9You can''t change your nick but you may reset it by typing /nick off if you have a legacy nick!");
            this.thisIsNotTheWorldsize = getStringTranslation("1b1t-options.not-worldsize", "&7This is not the world size, for world size type /stats");

            // Join & Leave Messages
            this.joinMessage = getStringTranslation("join-leave-messages.join", "&7%player% joined the game.");
            this.leaveMessage = getStringTranslation("join-leave-messages.join", "&7%player% left the game.");
            // First Join Message
            this.firstJoinMessage = getStringTranslation("join-leave-messages.first-join", "&7%player% joined the game for the first time. They are %players_num% to join.");

            if (addedMissing) fileConfiguration.save(langFile);
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InvalidConfigurationException e) {
            AnarchyExploitFixes.getInstance().getLogger().warning("Translation file " + langFile + " is not formatted properly. Skipping it.");
        }
    }

    public String getStringTranslation(String path, String defaultTranslation) {
        String translation = fileConfiguration.getString(path);
        if (translation == null) {
            fileConfiguration.set(path, defaultTranslation);
            addedMissing = true;
            return defaultTranslation;
        }
        return translation;
    }
}
