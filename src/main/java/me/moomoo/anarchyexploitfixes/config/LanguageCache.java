package me.moomoo.anarchyexploitfixes.config;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import org.bukkit.configuration.InvalidConfigurationException;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.File;
import java.io.IOException;

public class LanguageCache {
    private final FileConfiguration fileConfiguration;
    boolean addedMissing = false;
    public String noPermission, command_Whitelist_BadCommand, youNeedToBeXBlocksAwayToTP, nickResetOnly, thisIsNotTheWorldsize, chat_ChatCoFix_SpecifyAPlayer,
            joinMessage, leaveMessage, firstJoinMessage, masked_KickMessage, witherSpawningDisabledInRadius, enabledConnectionMsgs, disabledConnectionMsgs,
            disablePacketElytraFly, elytra_youAreFlyingIn, elytra_new, elytra_old, elytra_speed, elytra_disabledLowTPS, elytra_goingTooFastLowTPS,
            elytra_goingTooFastChunks, elytra_goingTooFast, elytra_normal_disabledHere, elytra_normal_chunks, elytra_netherceiling_disabledHere,
            elytra_netherceiling_chunks, elytra_spawn_disabledHere, elytra_spawn_chunks;
    public LanguageCache(String lang) {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        File langFile = new File(plugin.getDataFolder() + File.separator + "lang", lang + ".yml");
        fileConfiguration = new YamlConfiguration();

        if (!langFile.exists()) {
            langFile.getParentFile().mkdirs();
            plugin.saveResource("lang" + File.separator + lang + ".yml", false);
        }
        try {
            fileConfiguration.load(langFile);

            // No Permission
            this.noPermission = getStringTranslation("no-permission", "You don't have permission to use this command.");

            // Chat
            this.chat_ChatCoFix_SpecifyAPlayer = getStringTranslation("chat.chatco-fix-specify-player", "&cYou didn't add a player name...");

            // Command Whitelist
            this.command_Whitelist_BadCommand = getStringTranslation("command-whitelist.bad-command", "&4Bad command. Type /help for a list of commands.");

            // Join & Leave Messages
            this.joinMessage = getStringTranslation("join-leave-messages.join", "&7%player% joined the game.");
            this.leaveMessage = getStringTranslation("join-leave-messages.join", "&7%player% left the game.");
            this.enabledConnectionMsgs = getStringTranslation("join-leave-messages.enabled-connection-msgs", "&7Enabled connection msgs");
            this.disabledConnectionMsgs = getStringTranslation("join-leave-messages.disabled-connection-msgs", "&7Disabled connection msgs");
            // First Join Message
            this.firstJoinMessage = getStringTranslation("join-leave-messages.first-join", "&7%player% joined the game for the first time. They are %players_num% to join.");

            // Kick Message
            this.masked_KickMessage = getStringTranslation("kicks.masked-kick-message", "&6Disconnected");

            // 1b1t Options
            this.youNeedToBeXBlocksAwayToTP = getStringTranslation("1b1t-options.you-need-to-be-x-blocks-away-to-tp", "&9You need to be %blocks% blocks away from spawn to teleport!");
            this.nickResetOnly = getStringTranslation("1b1t-options.nickname-reset-only", "&9You can't change your nick but you may reset it by typing /nick off if you have a legacy nick!");
            this.thisIsNotTheWorldsize = getStringTranslation("1b1t-options.not-worldsize", "&7This is not the world size, for world size type /stats");

            // Disable Wither Spawning at Spawn
            this.witherSpawningDisabledInRadius = getStringTranslation("withers.disabled-at-spawn", "&4Wither spawning is disabled in a radius of %radius% blocks around spawn.");

            /*
                Elytra
            */
            // Packet ElytraFly message
            this.disablePacketElytraFly = getStringTranslation("elytra.disable-packet-elytrafly", "&cDisable Packet Elytra Fly.");
            // Elytra Speed
            this.elytra_youAreFlyingIn = getStringTranslation("elytra.elytra-speed.you-are-flying-in", "&7You are flying in %neworold% %chunks%");
            this.elytra_new = getStringTranslation("elytra.elytra-speed.new", "&4new");
            this.elytra_old = getStringTranslation("elytra.elytra-speed.old", "&aold");
            this.elytra_speed = getStringTranslation("elytra.elytra-speed.speed", "&7Speed: %speed% / %maxspeed%");
            this.elytra_disabledLowTPS = getStringTranslation("elytra.elytra-speed.disabled-low-tps", "&cElytras are currently disabled because the tps is lower than %tps%.");
            this.elytra_goingTooFastLowTPS = getStringTranslation("elytra.elytra-speed.going-too-fast-low-tps", "&cElytra speed is reduced during low tps. Turn down your settings.");
            this.elytra_goingTooFastChunks = getStringTranslation("elytra.elytra-speed.going-too-fast-chunks", "&cTurn down your settings. Elytra speed is restricted in %neworold% %chunks%");
            this.elytra_goingTooFast = getStringTranslation("elytra.elytra-speed.going-too-fast", "&cTurn down your settings. Elytra speed is restricted on this server.");
            this.elytra_normal_disabledHere = getStringTranslation("elytra.elytra-speed.normal.disabled-here", "&cElytras are currently disabled.");
            this.elytra_normal_chunks = getStringTranslation("elytra.elytra-speed.normal.chunks", "&7chunks");
            this.elytra_netherceiling_disabledHere = getStringTranslation("elytra.elytra-speed.nether-ceiling.disabled-here", "&cElytras are disabled on the nether ceiling.");
            this.elytra_netherceiling_chunks = getStringTranslation("elytra.elytra-speed.nether-ceiling.chunks", "&7ceiling chunks");
            this.elytra_spawn_disabledHere = getStringTranslation("elytra.elytra-speed.spawn.disabled-here", "&cElytras are disabled in a range of &6%range% &cblocks around spawn.");
            this.elytra_spawn_chunks = getStringTranslation("elytra.elytra-speed.spawn.chunks", "&7spawn chunks");

            if (addedMissing) fileConfiguration.save(langFile);
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InvalidConfigurationException e) {
            AnarchyExploitFixes.getInstance().getLogger().warning("Translation file " + langFile + " is not formatted properly. Skipping it.");
        }
    }

    public String getStringTranslation(String path, String defaultTranslation) {
        String translation = fileConfiguration.getString(path);
        if (translation == null) {
            fileConfiguration.set(path, defaultTranslation);
            addedMissing = true;
            return defaultTranslation;
        }
        return translation;
    }
}
