package me.moomoo.anarchyexploitfixes.modules.patches.packetpatches.boatfly;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;

import java.util.logging.Level;

public class BoatFlyPatch implements AnarchyExploitFixesModule {

    private final boolean logIsEnabled, shouldKickPlayer;
    private final int maxEntityPacketsPer10s;

    public BoatFlyPatch() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("patches.boatfly-patch.enable", "Patches Futureclient / Rusherhack boat fly exploit.");
        this.logIsEnabled = config.getBoolean("patches.boatfly-patch.log", true);
        this.maxEntityPacketsPer10s = config.getInt("patches.boatfly-patch.max-entity-packets-per-10s", 15);
        this.shouldKickPlayer = config.getBoolean("patches.boatfly-patch.kick-player-if-boatflying", false);
    }

    @Override
    public String name() {
        return "boatfly-patch";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        if (AnarchyExploitFixes.getConfiguration().protocolLib_IsDisabled) {
            LogUtils.logWithModulePrefix(Level.WARNING, name(), "Not enabling because ProtocolLib is disabled in config.");
        } else {
            if (AnarchyExploitFixes.getInstance().getServer().getPluginManager().isPluginEnabled("ProtocolLib")) {
                new BoatFlyPacketListener(maxEntityPacketsPer10s, logIsEnabled, shouldKickPlayer, name());
            } else {
                LogUtils.logWithModulePrefix(Level.SEVERE, name(), "Exploit can't be patched because ProtocolLib is missing.");
            }
        }
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.boatfly-patch.enable", true);
    }
}
