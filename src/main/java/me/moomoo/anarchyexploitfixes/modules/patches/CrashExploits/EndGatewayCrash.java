package me.moomoo.anarchyexploitfixes.modules.patches.CrashExploits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityTeleportEvent;

public class EndGatewayCrash implements AnarchyExploitFixesModule, Listener {

    public EndGatewayCrash() {}

    @Override
    public String name() {
        return "Prevent End Gateway Crash Exploit";
    }

    @Override
    public String category() {
        return "Patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.crash-exploits.prevent-end-gateway-crash", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onEntityTeleportEvent(EntityTeleportEvent event) {
        Entity teleportedEntity = event.getEntity();
        if (
                teleportedEntity.getWorld().getEnvironment().equals(World.Environment.THE_END)
                && !teleportedEntity.isEmpty()
        ) {
            event.setCancelled(true);
            Bukkit.getLogger().warning(
                    "Prevented End-Gateway Crash Exploit! Entity "+teleportedEntity.getName()+" tried going through Gateway at:\n"+teleportedEntity.getLocation()
            );
        }
    }
}
