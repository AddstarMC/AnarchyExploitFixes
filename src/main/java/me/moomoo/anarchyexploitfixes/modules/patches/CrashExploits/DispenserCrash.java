package me.moomoo.anarchyexploitfixes.modules.patches.CrashExploits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.ChunkUtils;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;

public class DispenserCrash implements AnarchyExploitFixesModule, Listener {

    public DispenserCrash() {}

    @Override
    public String name() {
        return "Prevent Dispenser Crash Exploit";
    }

    @Override
    public String category() {
        return "Patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.crash-exploits.prevent-dispenser-crash", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onDispense(BlockDispenseEvent event) {
        Block dispensedBlock = event.getBlock();
        World world = dispensedBlock.getWorld();
        if (
                dispensedBlock.getY() >= (world.getMaxHeight()-1)
                || dispensedBlock.getY() <= ChunkUtils.getMinWorldHeight(world))
        {
            event.setCancelled(true);
            Bukkit.getLogger().warning("Prevented a dispenser from crashing the server at: "+dispensedBlock.getLocation());
        }
    }
}
