package me.moomoo.anarchyexploitfixes.modules.patches.DupeFixes;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Player;
import org.bukkit.event.Listener;

import java.awt.*;

public class ExpDupePatch2 implements AnarchyExploitFixesModule, Listener {

    public ExpDupePatch2() {}

    @Override
    public String name() {
        return "Experimental Dupe Patch [2]";
    }

    @Override
    public String category() {
        return "DupePreventions";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getScheduler().runTaskTimer(plugin, preventDespawning, 0L, 20L);
    }

    @Override
    public boolean shouldEnable() {
        if (AnarchyExploitFixes.getMCVersion() != 12) return false;
        return AnarchyExploitFixes.getConfiguration().getBoolean("dupe-preventions.experimental-dupe-patch-2", false);
    }

    private final Runnable preventDespawning = () -> {
        for (World world : Bukkit.getWorlds()) {
            for (Entity entity : world.getEntities()) {
                if (entity instanceof LivingEntity) {
                    ((LivingEntity) entity).setRemoveWhenFarAway(!isEntityCloseToPlayer(entity));
                }
            }
        }
    };

    public boolean isEntityCloseToPlayer(Entity entity) {
        for (Player player : Bukkit.getOnlinePlayers()) {
            Point playerPoint = new Point(player.getLocation().getBlockX(), player.getLocation().getBlockZ());
            Point entityPoint = new Point(entity.getLocation().getBlockX(), entity.getLocation().getBlockZ());
            if (playerPoint.distance(entityPoint) < 500) {
                return true;
            }
        }
        return false;
    }
}
