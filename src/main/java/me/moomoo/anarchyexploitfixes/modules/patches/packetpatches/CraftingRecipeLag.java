package me.moomoo.anarchyexploitfixes.modules.patches.packetpatches;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.scheduler.BukkitScheduler;

import java.util.HashSet;
import java.util.UUID;

public class CraftingRecipeLag implements AnarchyExploitFixesModule {

    private final AnarchyExploitFixes plugin;
    private final BukkitScheduler bukkitScheduler;
    private final HashSet<UUID> crafting = new HashSet<>();
    private final long craftingRecipeDelay;

    public CraftingRecipeLag() {
        this.plugin = AnarchyExploitFixes.getInstance();
        this.bukkitScheduler = plugin.getServer().getScheduler();
        this.craftingRecipeDelay = AnarchyExploitFixes.getConfiguration().getInt("patches.prevent-crafting-recipe-lag-exploit.crafting-recipe-delay-in-ticks", 5);
    }

    @Override
    public String name() {
        return "Prevent Crafting-Recipe Lag Exploit";
    }

    @Override
    public String category() {
        return "Patches";
    }

    @Override
    public void enable() {
        ProtocolLibrary.getProtocolManager().addPacketListener(new PacketAdapter(
                plugin, ListenerPriority.NORMAL, PacketType.Play.Client.AUTO_RECIPE
        ) {
            @Override
            public void onPacketReceiving(PacketEvent event) {
                if (event.isPlayerTemporary()) return;

                Player player = event.getPlayer();
                UUID playerUniqueID = player.getUniqueId();

                if (crafting.contains(playerUniqueID)) {
                    event.setCancelled(true);
                } else {
                    crafting.add(playerUniqueID);
                    bukkitScheduler.runTaskLater(
                            plugin, () -> crafting.remove(playerUniqueID), craftingRecipeDelay
                    );
                }
            }
        });
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-crafting-recipe-lag-exploit.enable", true);
    }
}
