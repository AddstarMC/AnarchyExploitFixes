package me.moomoo.anarchyexploitfixes.modules.misc;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;
import org.bukkit.event.player.PlayerQuitEvent;

public class JoinLeaveMessages implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final boolean showConnectionMsgsByDefault;

    public JoinLeaveMessages() {
        this.plugin = AnarchyExploitFixes.getInstance();
        this.showConnectionMsgsByDefault = AnarchyExploitFixes.getConfiguration().getBoolean("join-leave-messages.connection-messages-on-by-default", true);
    }

    @Override
    public String name() {
        return "Join/Leave Messages";
    }

    @Override
    public String category() {
        return "Misc";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("join-leave-messages.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerJoinEvent(PlayerJoinEvent event) {
        event.setJoinMessage(null);

        Player joiningPlayer = event.getPlayer();
        if (joiningPlayer.hasPermission("anarchyexploitfixes.silentJoin")) return;

        for (Player onlinePlayer : Bukkit.getOnlinePlayers()) {
            if (showConnectionMsgsByDefault) {
                if (plugin.connectionMsgs.contains(onlinePlayer.getUniqueId())) return;
            } else {
                if (!plugin.connectionMsgs.contains(onlinePlayer.getUniqueId())) return;
            }
            onlinePlayer.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    AnarchyExploitFixes.getLang(onlinePlayer.getLocale()).joinMessage.replace("%player%", joiningPlayer.getName())
            ));
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerLeaveEvent(PlayerQuitEvent event) {
        event.setQuitMessage(null);

        Player leavingPlayer = event.getPlayer();
        if (leavingPlayer.hasPermission("anarchyexploitfixes.silentLeave")) return;

        for (Player onlinePlayer : Bukkit.getOnlinePlayers()) {
            if (showConnectionMsgsByDefault) {
                if (plugin.connectionMsgs.contains(onlinePlayer.getUniqueId())) return;
            } else {
                if (!plugin.connectionMsgs.contains(onlinePlayer.getUniqueId())) return;
            }
            onlinePlayer.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    AnarchyExploitFixes.getLang(onlinePlayer.getLocale()).leaveMessage.replace("%player%", leavingPlayer.getName())
            ));
        }
    }
}
