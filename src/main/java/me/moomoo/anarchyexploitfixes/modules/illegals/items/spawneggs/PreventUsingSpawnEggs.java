package me.moomoo.anarchyexploitfixes.modules.illegals.items.spawneggs;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.Action;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.player.PlayerInteractEvent;

import static me.moomoo.anarchyexploitfixes.utils.ItemUtils.isSpawnEgg;

public class PreventUsingSpawnEggs implements AnarchyExploitFixesModule, Listener {

    public PreventUsingSpawnEggs() {}

    @Override
    public String name() {
        return "spawn-eggs.prevent-using";
    }

    @Override
    public String category() {
        return "illegals";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("illegals.spawn-eggs.prevent-using", false, "Also prevents them from being used inside dispensers.");
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerInteractEvent(PlayerInteractEvent event) {
        if (event.getAction().equals(Action.RIGHT_CLICK_BLOCK) && isSpawnEgg(event.getItem())) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onDispense(BlockDispenseEvent event) {
        if (isSpawnEgg(event.getItem())) {
            event.setCancelled(true);
        }
    }
}
