package me.moomoo.anarchyexploitfixes.modules.illegals.items.bannedblocks;

import com.cryptomorin.xseries.XMaterial;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Material;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;

import java.util.Arrays;
import java.util.HashSet;
import java.util.List;
import java.util.logging.Logger;

public class PreventPlacingBannedBlocks implements AnarchyExploitFixesModule, Listener {

    private final HashSet<Material> bannedItems = new HashSet<>();

    public PreventPlacingBannedBlocks() {
        shouldEnable();
        Logger logger = AnarchyExploitFixes.getLog();
        List<String> configuredBannedBlocks = AnarchyExploitFixes.getConfiguration().getList("illegals.ban-specific-blocks.banned-blocks", Arrays.asList("BEDROCK", "BARRIER", "COMMAND", "STRUCTURE_BLOCK", "ENDER_PORTAL_FRAME"));
        for (String configuredBlock : configuredBannedBlocks) {
            Material bannedMaterial = Material.getMaterial(configuredBlock);
            if (bannedMaterial != null) {
                bannedItems.add(bannedMaterial);
            } else {
                logger.warning("("+name()+") Material '"+configuredBlock+"' is not a valid Material. Please use correct Material enums for your Minecraft version!");
            }
        }
    }

    @Override
    public String name() {
        return "ban-specific-blocks.prevent-placing";
    }

    @Override
    public String category() {
        return "illegals";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("illegals.ban-specific-blocks.prevent-placing", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onBlockPlace(BlockPlaceEvent event) {
        Material placedType = event.getBlock().getType();
        if (bannedItems.contains(placedType)) {
            if (
                    !(placedType.equals(XMaterial.END_PORTAL_FRAME.parseMaterial())
                    && event.getPlayer().getInventory().getItemInMainHand().getType().equals(XMaterial.ENDER_EYE.parseMaterial()))
            ) {
                event.setCancelled(true);
            }
        }
    }
}
