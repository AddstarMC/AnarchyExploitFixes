package me.moomoo.anarchyexploitfixes.modules.chat;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.scheduler.BukkitScheduler;

import java.util.HashMap;
import java.util.HashSet;
import java.util.UUID;

public class PreventChatSpam implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final BukkitScheduler bukkitScheduler;
    private final HashSet<UUID> playersWritingInChat = new HashSet<>();
    private final HashSet<String> previouslySentMessages = new HashSet<>();
    private final HashMap<UUID, Integer> playersAndTheirMessageCounts = new HashMap<>();
    private final long antiSpamTime, antiSpamCheckTime, antiSpamWordTime;
    private final int messagesPerTime;
    private final boolean logIsEnabled;

    public PreventChatSpam() {
        this.plugin = AnarchyExploitFixes.getInstance();
        this.bukkitScheduler = plugin.getServer().getScheduler();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.logIsEnabled = config.getBoolean("chat.prevent-spam.log", false);
        this.antiSpamTime = config.getInt("chat.prevent-spam.anti-spam-time", 1) * 20L;
        this.antiSpamCheckTime = config.getInt("chat.prevent-spam.anti-spam-check-time", 30) * 20L;
        this.antiSpamWordTime = config.getInt("chat.prevent-spam.anti-spam-word-time", 60) * 20L;
        this.messagesPerTime = config.getInt("chat.prevent-spam.anti-spam-messages-per-time", 10);
    }

    @Override
    public String name() {
        return "Prevent Spam";
    }

    @Override
    public String category() {
        return "Chat";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chat.prevent-spam.enable", false);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerChat(AsyncPlayerChatEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;

        String message = event.getMessage();
        UUID playerUniqueId = player.getUniqueId();

        if (!playersWritingInChat.contains(playerUniqueId)) {
            playersWritingInChat.add(playerUniqueId);
            bukkitScheduler.runTaskLater(
                    plugin, () -> playersWritingInChat.remove(playerUniqueId), antiSpamTime
            );
            if (!previouslySentMessages.contains(message)) {
                previouslySentMessages.add(message);
                bukkitScheduler.runTaskLater(
                        plugin, () -> previouslySentMessages.remove(message), antiSpamWordTime
                );
                if (playersAndTheirMessageCounts.containsKey(playerUniqueId)) {
                    playersAndTheirMessageCounts.put(playerUniqueId, 1);
                } else {
                    if (playersAndTheirMessageCounts.get(playerUniqueId) > messagesPerTime) {
                        event.setCancelled(true);
                        if (logIsEnabled) AnarchyExploitFixes.getLog().info(
                                "(Chat Prevent Spam) " + player.getName() +
                                        " FAILED to send message due to too many messages in time period: '"+message+"'"
                        );
                    } else {
                        playersAndTheirMessageCounts.merge(playerUniqueId, 1, Integer::sum);
                        bukkitScheduler.runTaskLater(
                                plugin, () -> playersAndTheirMessageCounts.put(playerUniqueId, playersAndTheirMessageCounts.get(playerUniqueId) - 1), antiSpamCheckTime
                        );
                    }
                }
            } else {
                event.setCancelled(true);
                if (logIsEnabled) AnarchyExploitFixes.getLog().info("(Chat Prevent Spam) " + player.getName() +
                        " FAILED to send message due to duplicate message: "+message
                );
            }
        } else {
            event.setCancelled(true);
            if (logIsEnabled) AnarchyExploitFixes.getLog().info(
                    "(Chat Prevent Spam) " + player.getName() +
                            " FAILED to send message due to slowmode: '"+message+"'"
            );
        }
    }
}
