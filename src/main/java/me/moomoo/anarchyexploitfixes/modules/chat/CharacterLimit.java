package me.moomoo.anarchyexploitfixes.modules.chat;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;

import java.util.logging.Logger;

public class CharacterLimit implements AnarchyExploitFixesModule, Listener {

    private final Logger logger;
    private final boolean logIsEnabled;
    private final int characterLimit;

    public CharacterLimit() {
        Config config = AnarchyExploitFixes.getConfiguration();
        this.logger = Bukkit.getLogger();
        this.logIsEnabled = config.getBoolean("chat.character-limit.log", true);
        this.characterLimit = config.getInt("chat.character-limit.char-limit", 128);
    }

    @Override
    public String name() {
        return "Character Limit";
    }

    @Override
    public String category() {
        return "Chat";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chat.character-limit.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerChat(AsyncPlayerChatEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;

        String message = event.getMessage();
        int charLength = message.length();

        if (charLength > characterLimit) {
            event.setCancelled(true);
            if (logIsEnabled) logger.info(
                    "(Char Limit) "+player.getName()+" failed sending a message that exceeded the limit by "
                            +(charLength-characterLimit)+" character(s): '"+message+"'"
            );
        }
    }
}
