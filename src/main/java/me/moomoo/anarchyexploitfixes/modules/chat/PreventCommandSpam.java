package me.moomoo.anarchyexploitfixes.modules.chat;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;
import org.bukkit.scheduler.BukkitScheduler;

import java.util.Arrays;
import java.util.HashSet;
import java.util.UUID;
import java.util.logging.Level;

import static me.moomoo.anarchyexploitfixes.utils.CommandUtils.getCommandLabel;

public class PreventCommandSpam implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final BukkitScheduler bukkitScheduler;
    private final HashSet<UUID> playersUsingCommands = new HashSet<>();
    private final HashSet<String> whitelistedCommands = new HashSet<>();
    private final HashSet<String> bannedSubCommands = new HashSet<>();
    private final boolean usingWhitelist, logIsEnabled;
    private final long antiSpamCommandTime;

    public PreventCommandSpam() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        this.bukkitScheduler = plugin.getServer().getScheduler();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.logIsEnabled = config.getBoolean("chat.prevent-spam.anti-spam-commands.log", true);
        this.antiSpamCommandTime = config.getInt("chat.prevent-spam.anti-spam-commands.anti-spam-command-time", 1) * 20L;
        this.usingWhitelist = config.getBoolean("chat.prevent-spam.anti-spam-commands.use-whitelist", true, "Exclude commands from antispam.");
        this.whitelistedCommands.addAll(config.getList("chat.prevent-spam.anti-spam-commands.whitelisted-commands", Arrays.asList(
                "msg", "message", "w", "whisper", "tell", "r", "reply", "/f"
        )));
        this.bannedSubCommands.addAll(config.getList("chat.prevent-spam.anti-spam-commands.banned-subcommands", Arrays.asList(
                "msg Notch", "f perms"
        )));
    }

    @Override
    public String name() {
        return "anti-spam-commands";
    }

    @Override
    public String category() {
        return "chat";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chat.prevent-spam.anti-spam-commands.enable", false);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onCommandPreProcess(PlayerCommandPreprocessEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;

        String message = event.getMessage();
        String commandLabel = getCommandLabel(message).toLowerCase();
        String fullCommand = message.substring(commandLabel.length()+1);
        fullCommand = "/"+commandLabel+fullCommand;
        event.setMessage(fullCommand);
        if (usingWhitelist && whitelistedCommands.contains(commandLabel)) return;

        for (String bannedSubCommand : bannedSubCommands) {
            if (message.toLowerCase().substring(1).startsWith(bannedSubCommand)) {
                UUID playerUniqueId = player.getUniqueId();
                if (!playersUsingCommands.contains(playerUniqueId)) {
                    playersUsingCommands.add(playerUniqueId);
                } else {
                    event.setCancelled(true);
                    if (logIsEnabled) AnarchyExploitFixes.log(Level.INFO, name(),"Prevented "+player.getName()+" from sending command: '"+fullCommand+"' due to too many commands in time period.");
                    bukkitScheduler.runTaskLaterAsynchronously(
                            plugin, () -> playersUsingCommands.remove(playerUniqueId), antiSpamCommandTime
                    );
                }
                return;
            }
        }
    }
}
