package me.moomoo.anarchyexploitfixes.modules.preventions;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Location;
import org.bukkit.World;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.player.PlayerMoveEvent;
import org.bukkit.event.player.PlayerTeleportEvent;

public class NetherRoof implements AnarchyExploitFixesModule, Listener {

    public NetherRoof() {}

    @Override
    public String name() {
        return "Prevent Nether Roof";
    }

    @Override
    public String category() {
        return "Preventions";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("preventions.prevent-nether-roof.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onTeleport(PlayerTeleportEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.netherroofbypass")) return;
        if (!player.getWorld().getEnvironment().equals(World.Environment.NETHER)) return;

        if (event.getFrom().getY() < 127 && event.getTo().getY() > 127) {
            player.teleport(event.getFrom());
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerMove(PlayerMoveEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.netherroofbypass")) return;
        if (!player.getWorld().getEnvironment().equals(World.Environment.NETHER)) return;

        if (event.getTo().getY() > 127 || player.getLocation().getY() > 127) {
            player.teleport(new Location(
                    player.getWorld(), player.getLocation().getX(), 120, player.getLocation().getZ()
            ));
            if (player.isInsideVehicle()) player.leaveVehicle();
            if (player.isGliding()) player.setGliding(false);
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onBlockPlace(BlockPlaceEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.netherroofbypass")) return;
        if (!player.getWorld().getEnvironment().equals(World.Environment.NETHER)) return;

        if (event.getBlock().getY() > 127) {
            event.setCancelled(true);
            player.teleport(new Location(
                    player.getWorld(), player.getLocation().getX(), 120, player.getLocation().getZ()
            ));
        }
    }
}

