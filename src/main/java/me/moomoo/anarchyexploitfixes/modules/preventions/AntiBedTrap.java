package me.moomoo.anarchyexploitfixes.modules.preventions;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.PlayerDeathEvent;
import org.bukkit.scheduler.BukkitScheduler;

import java.util.HashMap;
import java.util.UUID;
import java.util.logging.Level;

public class AntiBedTrap implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final BukkitScheduler bukkitScheduler;
    private final HashMap<UUID, Integer> playersDying = new HashMap<>();
    private final boolean logIsEnabled;
    private final int maxDeaths;
    private final long checkTime;

    public AntiBedTrap() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        this.bukkitScheduler = plugin.getServer().getScheduler();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("preventions.anti-bed-trap.enable", "Resets Bed Respawn when a player dies too many times within a certain timeframe.");
        this.logIsEnabled = config.getBoolean("preventions.anti-bed-trap.log", false);
        this.maxDeaths = config.getInt("preventions.anti-bed-trap.death-amount", 4, "Amount of times player can die until he is determined as bed-trapped.");
        this.checkTime = config.getInt("preventions.anti-bed-trap.check-time-in-seconds", 30, "If the player dies x times within 30 seconds his bed will reset.") * 20L;
    }

    @Override
    public String name() {
        return "anti-bed-trap";
    }

    @Override
    public String category() {
        return "preventions";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("preventions.anti-bed-trap.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onDeath(PlayerDeathEvent event) {
        Player player = event.getEntity();
        if (player.getBedSpawnLocation() == null) return;

        UUID playerUniqueID = player.getUniqueId();
        Integer playerDeathCount = playersDying.get(playerUniqueID);

        if (playerDeathCount == null) {
            playersDying.put(playerUniqueID, 1);
        } else {
            if (playerDeathCount > maxDeaths) {
                player.setBedSpawnLocation(null);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),
                        "Reset bed respawn of potentially bed-trapped player '"+ player.getName() + "'"
                );
            } else {
                playersDying.merge(playerUniqueID, 1, Integer::sum);
                bukkitScheduler.runTaskLaterAsynchronously(
                        plugin, () -> playersDying.put(playerUniqueID, playersDying.get(playerUniqueID) - 1), checkTime
                );
            }
        }
    }
}
