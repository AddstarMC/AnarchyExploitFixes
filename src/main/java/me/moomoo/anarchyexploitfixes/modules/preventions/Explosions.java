package me.moomoo.anarchyexploitfixes.modules.preventions;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.entity.EntityExplodeEvent;
import org.bukkit.event.entity.ExplosionPrimeEvent;

public class Explosions implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final double disableRedstoneTPS;

    public Explosions() {
        this.plugin = AnarchyExploitFixes.getInstance();
        this.disableRedstoneTPS = AnarchyExploitFixes.getConfiguration().getDouble("preventions.disable-explosions-on-low-tps.disable-TPS", 14.0);
    }

    @Override
    public String name() {
        return "Explosions during low TPS";
    }

    @Override
    public String category() {
        return "Preventions";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("preventions.disable-explosions-on-low-tps.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onExplode(EntityExplodeEvent event) {
        if (plugin.tps <= disableRedstoneTPS) {
            event.setCancelled(true);
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onExplodePrime(ExplosionPrimeEvent event) {
        if (plugin.tps <= disableRedstoneTPS) {
            event.setCancelled(true);
        }
    }
}
