package me.moomoo.anarchyexploitfixes.modules.recode.chunklimits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPhysicsEvent;

public class FallingBlocksLowTPS implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final double disablePhysicsTPS;

    public FallingBlocksLowTPS() {
        this.plugin = AnarchyExploitFixes.getInstance();
        this.disablePhysicsTPS = AnarchyExploitFixes.getConfiguration().getDouble("chunk-limits.falling-block-limit.disable-falling-blocks-on-low-TPS.disable-TPS", 16.0);
    }

    @Override
    public String name() {
        return "Disable Falling Blocks on low TPS";
    }

    @Override
    public String category() {
        return "ChunkLimits";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chunk-limits.falling-block-limit.disable-falling-blocks-on-low-TPS.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onEntityChange(BlockPhysicsEvent event) {
        if (!event.getChangedType().hasGravity()) return;

        if (plugin.tps <= disablePhysicsTPS) {
            event.setCancelled(true);
        }
    }
}
