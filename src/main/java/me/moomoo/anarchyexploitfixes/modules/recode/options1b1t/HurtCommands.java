package me.moomoo.anarchyexploitfixes.modules.recode.options1b1t;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import java.util.Collections;
import java.util.HashSet;
import java.util.List;

public class HurtCommands implements AnarchyExploitFixesModule, Listener {

    private final HashSet<String> hurtCommands = new HashSet<>();
    public HurtCommands() {
        List<String> configuredHurtCommands = AnarchyExploitFixes.getConfiguration().getList("1b1t-options.make-specific-commands-hurt-you.hurt-commands",
                Collections.singletonList("/tpa")
        );
        hurtCommands.addAll(configuredHurtCommands);
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        plugin.enabledModules.add("(1b1t) Hurt Commands");
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("1b1t-options.make-specific-commands-hurt-you.enable", false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    public void onCommandPreProcess(PlayerCommandPreprocessEvent event) {
        Player player = event.getPlayer();
        String slashCommand = event.getMessage().split(" ")[0];

        if (hurtCommands.contains(slashCommand)) {
            event.setCancelled(true);
            player.damage(10L);
        }
    }
}
