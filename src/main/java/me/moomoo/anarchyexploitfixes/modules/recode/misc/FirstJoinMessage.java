package me.moomoo.anarchyexploitfixes.modules.recode.misc;

import com.ibm.icu.text.RuleBasedNumberFormat;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerJoinEvent;

import java.io.File;
import java.util.HashSet;
import java.util.Locale;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class FirstJoinMessage implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final Config config;
    private final HashSet<Locale> availableTranslations = new HashSet<>();
    private final boolean showByDefault;
    public FirstJoinMessage() {
        this.config = AnarchyExploitFixes.getConfiguration();
        this.plugin = AnarchyExploitFixes.getInstance();

        // find out which translations are available to only switch ordinal format for present translations
        File langDirectory = new File(plugin.getDataFolder() + File.separator + "lang");
        Pattern langPattern = Pattern.compile("([a-z]{1,3}_[a-z]{1,3})(\\.yml)", Pattern.CASE_INSENSITIVE);
        if (langDirectory.listFiles() != null) {
            for (File langFile : langDirectory.listFiles()) {
                Matcher langMatcher = langPattern.matcher(langFile.getName());
                if (langMatcher.find()) {
                    String localeString = langMatcher.group(1).toLowerCase();
                    availableTranslations.add(Locale.forLanguageTag(localeString));
                }
            }
        }

        this.showByDefault = config.getBoolean("join-leave-messages.first-join-messages.connection-messages-on-by-default", false);
    }

    @Override
    public String name() {
        return "First Join Messages";
    }

    @Override
    public String category() {
        return "Misc";
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("join-leave-messages.first-join-messages.enable", false);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onPlayerJoinEvent(PlayerJoinEvent event) {
        Player joiningPlayer = event.getPlayer();
        if (joiningPlayer.hasPlayedBefore()) return;
        if (joiningPlayer.hasPermission("anarchyexploitfixes.silentJoin")) return;

        // get number before sending it to all online players
        int players_num = Bukkit.getOfflinePlayers().length + Bukkit.getOnlinePlayers().size() + 1;

        for (Player onlinePlayer : Bukkit.getOnlinePlayers()) {
            if (showByDefault) {
                if (plugin.connectionMsgs.contains(onlinePlayer.getUniqueId())) return;
            } else {
                if (!plugin.connectionMsgs.contains(onlinePlayer.getUniqueId())) return;
            }
            onlinePlayer.sendMessage(ChatColor.translateAlternateColorCodes('&',
                    AnarchyExploitFixes.getLang(onlinePlayer.getLocale()).firstJoinMessage
                            .replace("%player%", joiningPlayer.getName())
                            .replace("%players_num%", formatToOrdinal(onlinePlayer.getLocale(), players_num))
            ));
        }
    }

    private String formatToOrdinal(String playerLanguage, int number) {
        Locale playerLocale = Locale.forLanguageTag(playerLanguage);
        if (config.auto_lang && availableTranslations.contains(playerLocale)) {
            return new RuleBasedNumberFormat(playerLocale, RuleBasedNumberFormat.ORDINAL).format(number, "%digits-ordinal");
        } else {
            return new RuleBasedNumberFormat(config.default_lang, RuleBasedNumberFormat.ORDINAL).format(number, "%digits-ordinal");
        }
    }
}
