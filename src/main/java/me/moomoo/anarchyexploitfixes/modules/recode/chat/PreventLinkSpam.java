package me.moomoo.anarchyexploitfixes.modules.recode.chat;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.ConfigCache;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;
import org.bukkit.scheduler.BukkitScheduler;

import java.util.HashSet;
import java.util.UUID;
import java.util.logging.Logger;

public class PreventLinkSpam implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final ConfigCache configCache;
    private final Logger logger;
    private final BukkitScheduler bukkitScheduler;
    private final HashSet<UUID> playersSendingLinksInChat = new HashSet<>();

    public PreventLinkSpam() {
        this.plugin = AnarchyExploitFixes.getInstance();
        this.configCache = AnarchyExploitFixes.getConfiguration();
        this.logger = Bukkit.getLogger();
        this.bukkitScheduler = Bukkit.getScheduler();
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    public void onPlayerChat(AsyncPlayerChatEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;
        if (configCache.chat_PreventLinkSpam_AtSpawn_IsEnabled && player.getLocation().distance(player.getWorld().getSpawnLocation()) > configCache.chat_PreventLinkSpam_SpawnRadius) return;

        String message = event.getMessage();
        int amountOfDetectedLinks = 0;
        int amountOfExemptedLinks = 0;

        for (String word : message.split(" ")) {
            for (String regex : configCache.chat_Links_LinkRegex) {
                if (!word.matches(regex)) return;
                amountOfDetectedLinks++;
                if (!configCache.chat_Links_MoreLenientCheck_IsEnabled) return;
                for (String exemption : configCache.chat_Links_Exemptions) {
                    if (!word.contains(exemption)) return;
                    amountOfExemptedLinks++;
                }
                break;
            }
        }

        if (amountOfDetectedLinks > amountOfExemptedLinks) {
            UUID playerUniqueId = player.getUniqueId();

            if (!playersSendingLinksInChat.contains(playerUniqueId)) {
                playersSendingLinksInChat.add(playerUniqueId);
            } else {
                if (configCache.chat_PreventLinkSpam_LogEnabled) {
                    logger.info(
                            "(Prevent Link Spam) Prevented " + player.getName() + " from sending message containing link: '" + message + "'"
                    );
                }
                bukkitScheduler.runTaskLaterAsynchronously(
                        plugin, () -> playersSendingLinksInChat.remove(playerUniqueId), configCache.chat_PreventLinkSpam_CheckTime
                );
            }
        }
    }

    @Override
    public void enable() {
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        logger.info("Enabled: (Chat) Prevent Link Spam");
    }

    @Override
    public boolean shouldEnable() {
        if (configCache.chat_PreventChatSpam_IsEnabled) return false;
        return configCache.chat_PreventLinkSpam_IsEnabled;
    }
}
