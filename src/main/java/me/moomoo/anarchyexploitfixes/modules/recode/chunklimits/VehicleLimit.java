package me.moomoo.anarchyexploitfixes.modules.recode.chunklimits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.EntityUtils;
import org.bukkit.Bukkit;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.vehicle.VehicleCreateEvent;

public class VehicleLimit implements AnarchyExploitFixesModule, Listener {

    private final int maxVehiclesPerChunk;

    public VehicleLimit() {
        this.maxVehiclesPerChunk = AnarchyExploitFixes.getConfiguration().getInt("chunk-limits.vehicle-limit.max-vehicles-per-chunk", 25);
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        Bukkit.getLogger().info("Enabled: Vehicle Limit");
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chunk-limits.vehicle-limit.enable", false);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    private void onCreate(VehicleCreateEvent event) {
        if (EntityUtils.countVehicles(event.getVehicle().getChunk().getEntities()) > maxVehiclesPerChunk) {
            event.setCancelled(true);
        }
    }
}
