package me.moomoo.anarchyexploitfixes.modules.recode.options1b1t;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.ConfigCache;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerCommandPreprocessEvent;

import java.awt.*;
import java.util.Arrays;
import java.util.HashSet;
import java.util.List;

public class DistanceAwayToTP implements AnarchyExploitFixesModule, Listener {

    private final int distance;
    private final HashSet<String> teleportCommands = new HashSet<>();
    private final HashSet<String> excludedWorlds = new HashSet<>();

    public DistanceAwayToTP() {
        ConfigCache config = AnarchyExploitFixes.getConfiguration();
        this.distance = config.getInt("1b1t-options.distance-away-to-teleport.distance-in-blocks", 5000);
        List<String> configuredTPCommands = config.getList("1b1t-options.distance-away-to-teleport.teleport-commands", Arrays.asList(
                "/tpa", "/tpahere", "/call", "/ecall", "/etpa", "/tpask", "/etpask"
        ));
        for (String configuredTPCommand : configuredTPCommands) {
            teleportCommands.add(configuredTPCommand.toLowerCase());
        }
        List<String> configuredExcludedWorlds = config.getList("1b1t-options.distance-away-to-teleport.excluded-worlds", Arrays.asList(
                "world_the_end", "exampleworld2"
        ));
        excludedWorlds.addAll(configuredExcludedWorlds);
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        Bukkit.getLogger().info("Enabled: (1b1t) "+distance+" Blocks Away to Teleport");
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("1b1t-options.distance-away-to-teleport.enable", false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    public void onCommandPreProcess(PlayerCommandPreprocessEvent event) {
        Player player = event.getPlayer();
        if (excludedWorlds.contains(player.getWorld().getName())) return;

        String slashCommand = event.getMessage().split(" ")[0];
        if (!teleportCommands.contains(slashCommand)) return;

        Point playerLocation = new Point(player.getLocation().getBlockX(), event.getPlayer().getLocation().getBlockZ());
        Point spawn = new Point(0, 0);
        if (playerLocation.distance(spawn) > distance) return;

        event.setCancelled(true);
        player.sendMessage(ChatColor.translateAlternateColorCodes('&',
                AnarchyExploitFixes.getLang(player.getLocale()).youNeedToBeXBlocksAwayToTP
                        .replace("%blocks%", String.valueOf(distance))
        ));
    }
}
