package me.moomoo.anarchyexploitfixes.modules.recode.patches;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerRespawnEvent;
import org.bukkit.event.player.PlayerTeleportEvent;

import java.awt.*;

public class TeleportCoordExploit implements AnarchyExploitFixesModule, Listener {

    private final AnarchyExploitFixes plugin;
    private final int minDistanceToVanishPlayers;
    private final long teleportVanishTime;

    public TeleportCoordExploit() {
        this.plugin = AnarchyExploitFixes.getInstance();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.minDistanceToVanishPlayers = config.getInt("patches.prevent-teleport-coordinate-exploit.min-distance-to-vanish-player", 100);
        this.teleportVanishTime = config.getInt("patches.prevent-teleport-coordinate-exploit.teleport-vanish-time-in-ticks", 10);
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        plugin.enabledModules.add("(Patches) Prevent Teleport Coord Exploit");
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-teleport-coordinate-exploit.enable", true);
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    public void onTeleport(PlayerTeleportEvent event) {
        PlayerTeleportEvent.TeleportCause cause = event.getCause();
        if (
                cause.equals(PlayerTeleportEvent.TeleportCause.PLUGIN)
                || cause.equals(PlayerTeleportEvent.TeleportCause.COMMAND)
                || cause.equals(PlayerTeleportEvent.TeleportCause.ENDER_PEARL)
        ) {
            Point pointFrom = new Point(event.getFrom().getBlockX(), event.getFrom().getBlockZ());
            Point pointTo = new Point(event.getTo().getBlockX(), event.getTo().getBlockZ());
            if (pointFrom.distance(pointTo) > minDistanceToVanishPlayers) {
                vanish(event.getPlayer());
                Bukkit.getScheduler().runTaskLater(
                        plugin, () -> unVanish(event.getPlayer()), teleportVanishTime
                );
            }
        }
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    public void onSpawn(PlayerRespawnEvent event) {
        Player player = event.getPlayer();
        Point playerPoint = new Point(player.getLocation().getBlockX(), player.getLocation().getBlockZ());
        Point respawnPoint = new Point(event.getRespawnLocation().getBlockX(), event.getRespawnLocation().getBlockZ());
        if (playerPoint.distance(respawnPoint) > minDistanceToVanishPlayers) {
            vanish(player);
            Bukkit.getScheduler().runTaskLater(
                    plugin, () -> unVanish(player), teleportVanishTime
            );
        }
    }

    private void vanish(Player player) {
        for (Player onlinePlayer : Bukkit.getOnlinePlayers()) {
            if (!onlinePlayer.equals(player)) {
                onlinePlayer.hidePlayer(plugin, player);
            }
        }
    }

    public void unVanish(Player player) {
        for (Player onlinePlayer : Bukkit.getOnlinePlayers()) {
            if (!onlinePlayer.equals(player)) {
                onlinePlayer.showPlayer(plugin, player);
            }
        }
    }
}
