package me.moomoo.anarchyexploitfixes.modules.recode.chat;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.ConfigCache;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.event.player.AsyncPlayerChatEvent;

public class CharacterLimit implements AnarchyExploitFixesModule, Listener {

    private final ConfigCache configCache;
    public CharacterLimit() {
        this.configCache = AnarchyExploitFixes.getConfiguration();
    }

    @EventHandler(priority = EventPriority.NORMAL, ignoreCancelled = true)
    public void onPlayerChat(AsyncPlayerChatEvent event) {
        Player player = event.getPlayer();
        if (player.hasPermission("anarchyexploitfixes.chatbypass")) return;

        String message = event.getMessage();
        int charLength = message.length();

        if (charLength > configCache.chat_CharLimit) {
            event.setCancelled(true);
            if (configCache.chat_CharLimit_LogEnabled) {
                Bukkit.getLogger().info(
                        "(Char Limit) "+player.getName()+" failed sending a message that exceeded the limit by "
                                +(charLength-configCache.chat_CharLimit)+" character(s): '"+message+"'"
                );
            }
        }
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
        Bukkit.getLogger().info("Enabled: (Chat) Character Limit");
    }

    @Override
    public boolean shouldEnable() {
        return configCache.chat_CharLimit_IsEnabled;
    }
}
