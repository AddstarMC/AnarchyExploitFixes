package me.moomoo.anarchyexploitfixes.modules.oldcode.prevention;

import lombok.RequiredArgsConstructor;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import org.bukkit.Bukkit;
import org.bukkit.Location;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.entity.Entity;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockPhysicsEvent;
import org.bukkit.event.block.BlockPlaceEvent;
import org.bukkit.event.entity.EntityPortalEvent;
import org.bukkit.event.entity.ExpBottleEvent;
import org.bukkit.event.entity.ProjectileLaunchEvent;
import org.bukkit.event.vehicle.VehicleCreateEvent;

import java.awt.*;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Set;

@RequiredArgsConstructor
public class LagExploits implements Listener {
    private final AnarchyExploitFixes plugin;
    private final HashMap<String, Integer> throwCoolDown = new HashMap<>();
    private final Set<Location> throwCoolDownLocations = new HashSet<>();

    @EventHandler
    private void onEntityChange(BlockPhysicsEvent evt) {
        if (plugin.getConfig().getBoolean("LimitFallingBlocks") || plugin.getConfig().getDouble("FallingBlocks") < 20) {
            if (evt.getChangedType().hasGravity()) {
                if (plugin.tps < plugin.getConfig().getDouble("FallingBlocks")) {
                    evt.setCancelled(true);
                } else {
                    if (plugin.getConfig().getBoolean("LimitFallingBlocks")) {
                        int count = 0;
                        for (Entity entity : evt.getBlock().getChunk().getEntities()) {
                            if (entity.getType().equals(EntityType.FALLING_BLOCK)) {
                                count++;
                                if (count > plugin.getConfig().getInt("FallingBlockLimit")) {
                                    evt.setCancelled(true);
                                    return;
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}
