package me.moomoo.anarchyexploitfixes.modules.chunklimits;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.Bukkit;
import org.bukkit.Chunk;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.entity.Item;

import java.util.logging.Level;

public class DroppedItemLimit implements AnarchyExploitFixesModule {

    private final boolean logIsEnabled;
    private final int maxDroppedItemsPerChunk;
    private final long checkPeriod;

    public DroppedItemLimit() {
        shouldEnable();
        Config config = AnarchyExploitFixes.getConfiguration();
        config.addComment("chunk-limits.entity-limits.dropped-item-limit.enable", "Limit the amount of dropped items in a chunk to combat lag.\nBe aware this does not prioritize higher value items.");
        this.logIsEnabled = config.getBoolean("chunk-limits.entity-limits.dropped-item-limit.log-removals", true);
        this.maxDroppedItemsPerChunk = config.getInt("chunk-limits.entity-limits.dropped-item-limit.max-dropped-items-per-chunk", 200);
        this.checkPeriod = config.getInt("chunk-limits.entity-limits.dropped-item-limit.check-period-in-ticks", 20, "20 ticks = 1 second");
    }

    @Override
    public String name() {
        return "entity-limits.dropped-item-limit";
    }

    @Override
    public String category() {
        return "chunk-limits";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getScheduler().scheduleSyncRepeatingTask(plugin, checkAndRemoveDroppedItems, 20L, checkPeriod);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("chunk-limits.entity-limits.dropped-item-limit.enable", false);
    }

    private final Runnable checkAndRemoveDroppedItems = new Runnable() {
        @Override
        public void run() {
            for (World world : Bukkit.getWorlds()) {
                for (Chunk chunk : world.getLoadedChunks()) {

                    int droppedItems = 0;

                    for (Entity entity : chunk.getEntities()) {
                        if (entity instanceof Item) {
                            if (droppedItems > maxDroppedItemsPerChunk) {
                                entity.remove();
                                if (logIsEnabled) LogUtils.logWithModulePrefix(Level.INFO, name(),"Removed dropped item at "
                                        + entity.getLocation() + " because reached limit of " + maxDroppedItemsPerChunk
                                );
                            }
                            droppedItems++;
                        }
                    }
                }
            }
        }
    };
}
