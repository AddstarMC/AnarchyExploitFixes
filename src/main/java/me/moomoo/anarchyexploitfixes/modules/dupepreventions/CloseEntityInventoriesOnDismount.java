package me.moomoo.anarchyexploitfixes.modules.dupepreventions;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import org.bukkit.entity.Entity;
import org.bukkit.entity.HumanEntity;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.Listener;
import org.bukkit.inventory.InventoryHolder;
import org.spigotmc.event.entity.EntityDismountEvent;

import java.util.List;

public class CloseEntityInventoriesOnDismount implements AnarchyExploitFixesModule, Listener {

    public CloseEntityInventoriesOnDismount() {
        shouldEnable();
        AnarchyExploitFixes.getConfiguration().addComment("dupe-preventions.close-entity-inventories-on-dismount", "Closes open inventories of entities that got dismounted.");
    }

    @Override
    public String name() {
        return "close-entity-inventories-on-dismount";
    }

    @Override
    public String category() {
        return "dupe-preventions";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("dupe-preventions.close-entity-inventories-on-dismount", false);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = false)
    private void onEntityDismount(EntityDismountEvent event) {
        Entity dismounted = event.getDismounted();
        if (dismounted instanceof InventoryHolder) {
            List<HumanEntity> players_looking_at_inv = ((InventoryHolder)dismounted).getInventory().getViewers();
            if (players_looking_at_inv == null) return;
            for (HumanEntity viewer : players_looking_at_inv) {
                viewer.closeInventory();
            }
        }
    }
}
