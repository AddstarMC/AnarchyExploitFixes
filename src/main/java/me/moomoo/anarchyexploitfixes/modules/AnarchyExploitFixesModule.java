package me.moomoo.anarchyexploitfixes.modules;

import com.comphenix.protocol.ProtocolLibrary;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.bedrock.*;
import me.moomoo.anarchyexploitfixes.modules.chat.*;
import me.moomoo.anarchyexploitfixes.modules.chunklimits.*;
import me.moomoo.anarchyexploitfixes.modules.elytra.*;
import me.moomoo.anarchyexploitfixes.modules.illegals.blocks.RemovePlacedIllegalsOnChunkload;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.*;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.RevertMultiplyEnchanted;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.RevertOverEnchanted;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.RevertSpecificEnchants;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.enchantments.RevertUnenchantable;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.spawneggs.PreventUsingSpawnEggs;
import me.moomoo.anarchyexploitfixes.modules.illegals.items.spawneggs.RemoveSpawnEggs;
import me.moomoo.anarchyexploitfixes.modules.misc.*;
import me.moomoo.anarchyexploitfixes.modules.options1b1t.*;
import me.moomoo.anarchyexploitfixes.modules.patches.*;
import me.moomoo.anarchyexploitfixes.modules.patches.crashexploits.DispenserCrash;
import me.moomoo.anarchyexploitfixes.modules.patches.crashexploits.EndGatewayCrash;
import me.moomoo.anarchyexploitfixes.modules.patches.crashexploits.MultipleEnderdragons;
import me.moomoo.anarchyexploitfixes.modules.patches.dupefixes.*;
import me.moomoo.anarchyexploitfixes.modules.patches.lagexploits.SnowballExploit;
import me.moomoo.anarchyexploitfixes.modules.patches.packetpatches.BoatFly;
import me.moomoo.anarchyexploitfixes.modules.patches.packetpatches.CraftingRecipeLag;
import me.moomoo.anarchyexploitfixes.modules.patches.packetpatches.NoCom;
import me.moomoo.anarchyexploitfixes.modules.patches.packetpatches.PacketFly;
import me.moomoo.anarchyexploitfixes.modules.preventions.AntiBedTrap;
import me.moomoo.anarchyexploitfixes.modules.preventions.DisableFish;
import me.moomoo.anarchyexploitfixes.modules.preventions.Explosions;
import me.moomoo.anarchyexploitfixes.modules.preventions.netherportals.*;
import me.moomoo.anarchyexploitfixes.modules.preventions.NetherRoof;
import me.moomoo.anarchyexploitfixes.modules.preventions.withers.*;
import me.moomoo.anarchyexploitfixes.modules.redstone.DisableRedstoneOnLowTPS;
import me.moomoo.anarchyexploitfixes.modules.redstone.RateLimitLevers;
import org.bukkit.event.HandlerList;

import java.util.HashSet;
import java.util.logging.Logger;

import static org.bukkit.Bukkit.getPluginManager;

public interface AnarchyExploitFixesModule {

    String name();
    String category();
    void enable();
    boolean shouldEnable();

    HashSet<AnarchyExploitFixesModule> modules = new HashSet<>();

    static void reloadModules() {
        modules.clear();
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.enabledModules.clear();
        plugin.getServer().getScheduler().cancelTasks(plugin);
        HandlerList.unregisterAll(plugin);
        boolean foundProtocolLib = getPluginManager().isPluginEnabled("ProtocolLib");
        if (foundProtocolLib) ProtocolLibrary.getProtocolManager().removePacketListeners(plugin);

        // Bedrock
        modules.add(new FillNetherCeilingOnChunkload());
        modules.add(new FillNetherFloorOnChunkload());
        modules.add(new FillOverworldFloorOnChunkload());
        modules.add(new PeriodicallyFillNetherCeiling());
        modules.add(new PeriodicallyFillNetherFloor());
        modules.add(new PeriodicallyFillOverworldFloor());
        modules.add(new PreventGoingBelowBedrockFloor());

        // Chat
        modules.add(new BannedRegex());
        modules.add(new BannedWords());
        modules.add(new CharacterLimit());
        modules.add(new CommandWhitelist());
        modules.add(new FixChatCoIgnore());
        modules.add(new PreventChatSpam());
        modules.add(new PreventCommandSpam());
        modules.add(new PreventLinks());
        modules.add(new PreventLinkSpam());
        modules.add(new PreventUnicodeDot());
        modules.add(new ReplaceAt());

        // Chunklimits
        modules.add(new BlockLimit());
        modules.add(new CustomEntityLimit());
        modules.add(new ExpBottleLimit());
        modules.add(new FallingBlockLimit());
        modules.add(new FallingBlocksLowTPS());
        modules.add(new VehicleLimit());
        modules.add(new NonLivingEntityLimit());

        // Elytra
        modules.add(new ElytraAtSpawn());
        modules.add(new ElytraGlobal());
        modules.add(new ElytraOnCeiling());
        modules.add(new NewChunksListener());
        modules.add(new ElytraPacketFly());

        /*
            Illegals
        */
        // Blocks
        modules.add(new RemovePlacedIllegalsOnChunkload());
        // Items
        modules.add(new RemoveBannedBlocks());
        modules.add(new RemoveIllegalGoldenApples());
        modules.add(new RemovePlayerHeads());
        modules.add(new RemoveSpecificDataValues());
        modules.add(new RemoveSpecificItemNames());
        modules.add(new RevertOverstacked());
        modules.add(new RevertUnbreakables());
        // Enchantments
        modules.add(new RevertMultiplyEnchanted());
        modules.add(new RevertOverEnchanted());
        modules.add(new RevertSpecificEnchants());
        modules.add(new RevertUnenchantable());
        // Spawn Eggs
        modules.add(new PreventUsingSpawnEggs());
        modules.add(new RemoveSpawnEggs());

        // 1b1t Options
        modules.add(new BypassSlots());
        modules.add(new DisableNCPGeyser());
        modules.add(new DistanceAwayToTP());
        modules.add(new HurtCommands());
        modules.add(new NickResetOnly());
        modules.add(new PlaceBedrock());
        modules.add(new SlowDupe());
        modules.add(new UseSparkHealth());

        // Misc
        modules.add(new FirstJoinMessage());
        modules.add(new JoinLeaveMessages());
        modules.add(new MaskKickMessages());
        modules.add(new PreventSpamKick());

        /*
            Patches
        */
        modules.add(new BookBan());
        modules.add(new BowBomb());
        modules.add(new Burrow());
        modules.add(new CommandSign());
        modules.add(new EndPortalDestruction());
        modules.add(new GodMode());
        modules.add(new InvalidNames());
        modules.add(new TeleportCoordExploit());
        // Crash Exploits
        modules.add(new DispenserCrash());
        modules.add(new EndGatewayCrash());
        modules.add(new MultipleEnderdragons());
        // Dupe fixes
        modules.add(new ChestedEntitiesInPortals());
        modules.add(new ChestsOnEntities()); // testing needed
        modules.add(new EndPortalDupe());
        modules.add(new ExpDupePatch1());
        modules.add(new ExpDupePatch2());
        // Lag Exploits
        modules.add(new SnowballExploit());

        // Packet Patches
        Logger logger = AnarchyExploitFixes.getLog();
        if (AnarchyExploitFixes.getConfiguration().protocolLib_IsDisabled) {
            logger.warning("You specified to disable all ProtocolLib patches, which means:");
            logger.warning("NoCom Coordinate-Exploit will not be patched.");
            logger.warning("CraftingRecipe Lag-Exploit will not be patched.");
            logger.warning("BoatFly Exploit will not be patched.");
            logger.warning("PacketFly Exploit will not be patched.");
        } else {
            if (foundProtocolLib) {
                modules.add(new BoatFly());
                modules.add(new NoCom());
                modules.add(new PacketFly());
                modules.add(new CraftingRecipeLag());
            } else {
                logger.severe("Could not find ProtocolLib. Many gamebreaking exploits can not be patched without it:");
                logger.severe("NoCom Coordinate-Exploit can't be patched.");
                logger.severe("CraftingRecipe Lag-Exploit can't be patched.");
                logger.severe("BoatFly Exploit can't be patched.");
                logger.severe("PacketFly Exploit can't be patched.");
                logger.severe("Download dependency at https://www.spigotmc.org/resources/protocollib.1997/ or disable in config (not recommended)");
            }
        }

        /*
            Preventions
        */
        modules.add(new AntiBedTrap());
        modules.add(new DisableFish());
        modules.add(new Explosions());
        modules.add(new NetherRoof());
        // Nether Portals
        modules.add(new PreventAllEntitiesInPortals());
        modules.add(new PreventDroppedItemsInPortals());
        modules.add(new PreventFireworksInPortals());
        modules.add(new PreventPortalTraps());
        modules.add(new PreventProjectilesInPortals());
        // Withers
        modules.add(new DisableWitherSkulls());
        modules.add(new RemoveAllSkullsPeriodically());
        modules.add(new RemoveSkullsAfterXTicks());
        modules.add(new RemoveSkullsOnChunkload());
        modules.add(new RemoveSkullsOnChunkunload());
        modules.add(new WitherSpawningAtSpawn());

        // Redstone
        modules.add(new DisableRedstoneOnLowTPS());
        modules.add(new RateLimitLevers());

        for (AnarchyExploitFixesModule module : modules) {
            if (module.shouldEnable()) {
                module.enable();
                plugin.enabledModules.put("("+module.category()+") "+module.name(), true);
            } else {
                plugin.enabledModules.put("("+module.category()+") "+module.name(), false);
            }
        }
    }
}
