package me.moomoo.anarchyexploitfixes.utils;

import com.cryptomorin.xseries.XMaterial;
import org.bukkit.inventory.ItemStack;
import org.bukkit.inventory.meta.SpawnEggMeta;

public class ItemUtils {

    public static boolean isBook(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case WRITABLE_BOOK:
            case WRITTEN_BOOK:
                return true;
            default:
                return false;
        }
    }

    public static boolean isShulkerBox(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case SHULKER_BOX:
            case BLACK_SHULKER_BOX:
            case BLUE_SHULKER_BOX:
            case BROWN_SHULKER_BOX:
            case CYAN_SHULKER_BOX:
            case GRAY_SHULKER_BOX:
            case GREEN_SHULKER_BOX:
            case LIGHT_BLUE_SHULKER_BOX:
            case LIGHT_GRAY_SHULKER_BOX:
            case LIME_SHULKER_BOX:
            case MAGENTA_SHULKER_BOX:
            case ORANGE_SHULKER_BOX:
            case PINK_SHULKER_BOX:
            case PURPLE_SHULKER_BOX:
            case RED_SHULKER_BOX:
            case WHITE_SHULKER_BOX:
            case YELLOW_SHULKER_BOX:
                return true;
            default:
                return false;
        }
    }

    public static boolean isHelmet(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case CHAINMAIL_HELMET:
            case DIAMOND_HELMET:
            case GOLDEN_HELMET:
            case IRON_HELMET:
            case LEATHER_HELMET:
            case NETHERITE_HELMET:
            case TURTLE_HELMET:
                return true;
            default:
                return false;
        }
    }

    public static boolean isChestplate(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case CHAINMAIL_CHESTPLATE:
            case DIAMOND_CHESTPLATE:
            case GOLDEN_CHESTPLATE:
            case IRON_CHESTPLATE:
            case LEATHER_CHESTPLATE:
            case NETHERITE_CHESTPLATE:
                return true;
            default:
                return false;
        }
    }

    public static boolean isLeggings(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case CHAINMAIL_LEGGINGS:
            case DIAMOND_LEGGINGS:
            case GOLDEN_LEGGINGS:
            case IRON_LEGGINGS:
            case LEATHER_LEGGINGS:
            case NETHERITE_LEGGINGS:
                return true;
            default:
                return false;
        }
    }

    public static boolean isBoots(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case CHAINMAIL_BOOTS:
            case DIAMOND_BOOTS:
            case GOLDEN_BOOTS:
            case IRON_BOOTS:
            case LEATHER_BOOTS:
            case NETHERITE_BOOTS:
                return true;
            default:
                return false;
        }
    }

    public static boolean isArmor(ItemStack item) {
        return (isHelmet(item) || isChestplate(item) || isLeggings(item) || isBoots(item));
    }

    public static boolean isTool(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case NETHERITE_AXE:
            case NETHERITE_HOE:
            case NETHERITE_PICKAXE:
            case NETHERITE_SHOVEL:
            case DIAMOND_AXE:
            case DIAMOND_HOE:
            case DIAMOND_PICKAXE:
            case DIAMOND_SHOVEL:
            case GOLDEN_AXE:
            case GOLDEN_HOE:
            case GOLDEN_PICKAXE:
            case GOLDEN_SHOVEL:
            case IRON_AXE:
            case IRON_HOE:
            case IRON_PICKAXE:
            case IRON_SHOVEL:
            case STONE_AXE:
            case STONE_HOE:
            case STONE_PICKAXE:
            case STONE_SHOVEL:
            case WOODEN_AXE:
            case WOODEN_HOE:
            case WOODEN_PICKAXE:
            case WOODEN_SHOVEL:
                return true;
            default:
                return false;
        }
    }

    public static boolean isSword(ItemStack item) {
        switch (XMaterial.matchXMaterial(item)) {
            case NETHERITE_SWORD:
            case DIAMOND_SWORD:
            case GOLDEN_SWORD:
            case IRON_SWORD:
            case STONE_SWORD:
            case WOODEN_SWORD:
                return true;
            default:
                return false;
        }
    }

    public static boolean isTrident(ItemStack item) {
        return XMaterial.matchXMaterial(item).equals(XMaterial.TRIDENT);
    }

    public static boolean isCrossbow(ItemStack item) {
        return XMaterial.matchXMaterial(item).equals(XMaterial.CROSSBOW);
    }

    public static boolean isBow(ItemStack item) {
        return XMaterial.matchXMaterial(item).equals(XMaterial.BOW);
    }

    public static boolean isSpawnEgg(ItemStack item) {
        return item.getItemMeta() instanceof SpawnEggMeta;
    }

    public static boolean isPlayerHead(ItemStack item) {
        return (XMaterial.matchXMaterial(item).equals(XMaterial.PLAYER_HEAD));
    }
}