package me.moomoo.anarchyexploitfixes.utils;

import org.bukkit.Bukkit;
import org.bukkit.Chunk;
import org.bukkit.World;
import org.bukkit.entity.Entity;
import org.bukkit.entity.EntityType;
import org.bukkit.entity.LivingEntity;
import org.bukkit.entity.Vehicle;

public class EntityUtils {

    public void checkEntitiesPerChunk() {
        if (getConfig().getBoolean("PreventTooManyEntitiesInChunk")) {
            Bukkit.getScheduler().runTaskTimer(this, () -> {
                for (World w : Bukkit.getWorlds()) {
                    for (Chunk c : w.getLoadedChunks()) {
                        int count = 0;
                        for (Entity entity : c.getEntities()) {
                            if (ItemUtils.isEntity(entity) && !(entity instanceof LivingEntity)) {
                                if (count > getConfig().getInt("MaxEntitiesInChunk")) {
                                    entity.remove();
                                    if (getConfig().getBoolean("LogEntityRemovals")) {
                                        getLogger().warning("Removed entity " + entity.getType() + " at " + entity.getLocation() + " because reached entity limit of " + getConfig().getInt("MaxEntitiesInChunk"));
                                    }
                                }
                                count++;
                            }
                        }
                    }
                }
            }, 0L, getConfig().getInt("EntityCheckTimeTicks"));
        }
    }

    public void strictVehicleCheck() {
        if (getConfig().getBoolean("StrictVehicleCheck")) {
            Bukkit.getScheduler().runTaskTimer(this, () -> {
                for (World w : Bukkit.getWorlds()) {
                    for (Chunk c : w.getLoadedChunks()) {
                        int count = 0;
                        for (Entity entity : c.getEntities()) {
                            if (entity instanceof Vehicle) {
                                if (count > getConfig().getInt("MaxVehiclesInChunk")) {
                                    entity.remove();
                                }
                                count++;
                            }
                        }
                    }
                }
            }, 0L, 200L);
        }
    }

    public Integer countVehicles(Entity[] entities) {
        Integer count = 0;
        for (Entity entity : entities) {
            if (entity instanceof Vehicle) {
                count++;
            }
        }
        return count;
    }

    if (getConfig().getBoolean("RemoveAllWitherSkulls")) {
        Bukkit.getScheduler().runTaskTimer(this, () -> {
            for (World world : Bukkit.getWorlds()) {
                for (Entity entity : world.getEntities()) {
                    if (entity.getType().equals(EntityType.WITHER_SKULL)) {
                        entity.remove();
                    }
                }
            }
        }, 0L, 20L);
    }

}
