package me.moomoo.anarchyexploitfixes.misc;

import me.moomoo.anarchyexploitfixes.Main;
import me.moomoo.anarchyexploitfixes.patches.Elytra;
import org.bukkit.Bukkit;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerMoveEvent;

import java.util.HashMap;

public class RenderDistance implements Listener {
    private final Main plugin;
    public HashMap<Player, Integer> renderdistance = new HashMap<>();

    public RenderDistance(Main plugin) {
        this.plugin = plugin;
    }

    @EventHandler
    public void onMove(PlayerMoveEvent evt) {
        double tps = Bukkit.getServer().getTPS()[0];
        if (plugin.config.getBoolean("LimitRenderDistanceBasedOnTPS")) {
            if (Elytra.playersinnewchunks.contains(evt.getPlayer().getName())) {
                if (tps > plugin.config.getDouble("NewChunkBurstTPS")) {
                    setRenderDistance(evt.getPlayer(), plugin.config.getInt("NewChunkBurstRadius"));
                } else {
                    setRenderDistance(evt.getPlayer(), plugin.config.getInt("NewChunkRadius"));
                }
            } else {
                if (tps > plugin.config.getDouble("OldChunkBurstTPS")) {
                    setRenderDistance(evt.getPlayer(), plugin.config.getInt("OldChunkBurstRadius"));
                } else {
                    setRenderDistance(evt.getPlayer(), plugin.config.getInt("OldChunkRadius"));
                }
            }
        }
    }

    private void setRenderDistance(Player p, int distance) {
        if (renderdistance.get(p) != null) {
            if (renderdistance.get(p) != distance) {
                p.setViewDistance(distance);
                renderdistance.put(p, distance);
            }
        } else {
            p.setViewDistance(distance);
            renderdistance.put(p, distance);
        }
    }
}
