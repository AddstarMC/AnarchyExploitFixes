package me.moomoo.anarchyexploitfixes.modules.bedrock;

import io.papermc.paper.threadedregions.scheduler.ScheduledTask;
import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.config.Config;
import me.moomoo.anarchyexploitfixes.modules.AEFModule;
import me.moomoo.anarchyexploitfixes.utils.ChunkUtil;
import org.bukkit.Chunk;
import org.bukkit.World;

import java.util.HashSet;
import java.util.List;
import java.util.Set;

public class PeriodicallyFillNetherCeiling implements AEFModule {

    private final AnarchyExploitFixes plugin;
    private ScheduledTask scheduledTask;
    private final Set<String> exemptedWorlds;
    private final long checkPeriod;
    private final double pauseTPS;
    private final int ceilingY;
    private final boolean pauseOnLowTPS;
    
    public PeriodicallyFillNetherCeiling() {
        shouldEnable();
        this.plugin = AnarchyExploitFixes.getInstance();
        Config config = AnarchyExploitFixes.getConfiguration();
        this.ceilingY = config.nether_ceiling_max_y;
        this.checkPeriod = config.getInt("bedrock.fill-in-bedrock.nether-ceiling.periodically-check-and-fill.check-period-in-seconds", 10) * 20L;
        this.exemptedWorlds = new HashSet<>(config.getList("bedrock.fill-in-bedrock.nether-ceiling.exempted-worlds", List.of("exampleworld", "exampleworld2")));
        this.pauseOnLowTPS = config.getBoolean("bedrock.fill-in-bedrock.nether-ceiling.periodically-check-and-fill.pause-on-low-tps", true);
        this.pauseTPS = config.getDouble("bedrock.fill-in-bedrock.nether-ceiling.periodically-check-and-fill.pause-tps", 16.0);
    }

    @Override
    public String name() {
        return "nether-ceiling.periodically-check-and-fill";
    }

    @Override
    public String category() {
        return "bedrock";
    }

    @Override
    public void enable() {
        this.scheduledTask = plugin.getServer().getGlobalRegionScheduler().runAtFixedRate(plugin, check -> run(), checkPeriod, checkPeriod);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("bedrock.fill-in-bedrock.nether-ceiling.periodically-check-and-fill.enable", false);
    }

    @Override
    public void disable() {
        if (scheduledTask != null) scheduledTask.cancel();
    }

    private void run() {
        for (World world : plugin.getServer().getWorlds()) {
            if (world.getEnvironment() != World.Environment.NETHER) continue;
            if (exemptedWorlds.contains(world.getName())) continue;

            for (Chunk chunk : world.getLoadedChunks()) {
                plugin.getServer().getRegionScheduler().run(plugin, world, chunk.getX(), chunk.getZ(), fixChunk -> {
                    if (!chunk.isEntitiesLoaded()) return;
                    if (pauseOnLowTPS && (AnarchyExploitFixes.getTickData().getTPS() <= pauseTPS)) return;
                    ChunkUtil.createBedrockLayer(chunk, ceilingY);
                });
            }
        }
    }
}
