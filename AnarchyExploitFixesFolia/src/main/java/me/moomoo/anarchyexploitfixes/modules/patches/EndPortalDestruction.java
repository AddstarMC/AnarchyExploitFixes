package me.moomoo.anarchyexploitfixes.modules.patches;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import me.moomoo.anarchyexploitfixes.modules.AnarchyExploitFixesModule;
import me.moomoo.anarchyexploitfixes.utils.LogUtils;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.block.BlockFace;
import org.bukkit.event.EventHandler;
import org.bukkit.event.EventPriority;
import org.bukkit.event.HandlerList;
import org.bukkit.event.Listener;
import org.bukkit.event.block.BlockDispenseEvent;
import org.bukkit.event.player.PlayerBucketEmptyEvent;

import java.util.logging.Level;

public class EndPortalDestruction implements AnarchyExploitFixesModule,Listener {

    private final boolean logIsEnabled;

    public EndPortalDestruction() {
        shouldEnable();
        this.logIsEnabled = AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-destroying-end-portals.log", true);
    }

    @Override
    public String name() {
        return "prevent-destroying-end-portals";
    }

    @Override
    public String category() {
        return "patches";
    }

    @Override
    public void enable() {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        plugin.getServer().getPluginManager().registerEvents(this, plugin);
    }

    @Override
    public boolean shouldEnable() {
        return AnarchyExploitFixes.getConfiguration().getBoolean("patches.prevent-destroying-end-portals.enable", true);
    }

    @Override
    public void disable() {
        HandlerList.unregisterAll(this);
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onBlockDispense(BlockDispenseEvent event) {
        final Material dispensedMaterial = event.getItem().getType();
        if (
                dispensedMaterial.equals(Material.WATER_BUCKET)
                || dispensedMaterial.equals(Material.LAVA_BUCKET)
        ) {
            if (
                    event.getBlock().getRelative(BlockFace.DOWN).getType().equals(Material.END_PORTAL)
                    || event.getBlock().getRelative(BlockFace.UP).getType().equals(Material.END_PORTAL)
            ) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented a dispenser from destroying an end portal!");
            }
        }
    }

    @EventHandler(priority = EventPriority.HIGHEST, ignoreCancelled = true)
    private void onPlayerBucketEvent(PlayerBucketEmptyEvent event) {
        final BlockFace clickedFace = event.getBlockFace();
        Block clickedBlock = event.getBlockClicked();
        if (
                clickedFace.equals(BlockFace.NORTH)
                || clickedFace.equals(BlockFace.EAST)
                || clickedFace.equals(BlockFace.SOUTH)
                || clickedFace.equals(BlockFace.WEST)
        ) {
            if (
                    clickedBlock.getType().equals(Material.BEDROCK)
                    && clickedBlock.getWorld().getEnvironment().equals(World.Environment.THE_END)
            ) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+event.getPlayer().getName()+" from destroying an end portal!");
                return;
            }

            if (clickedBlock.getType().equals(Material.END_PORTAL_FRAME)) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+event.getPlayer().getName()+" from destroying an end portal!");
                return;
            }
        }

        if (
                clickedFace.equals(BlockFace.UP)
                || clickedFace.equals(BlockFace.DOWN)
        ) {
            if (
                    clickedBlock.getRelative(BlockFace.UP).getType().equals(Material.END_PORTAL)
                    || clickedBlock.getRelative(BlockFace.DOWN).getType().equals(Material.END_PORTAL)
            ) {
                event.setCancelled(true);
                if (logIsEnabled) LogUtils.moduleLog(Level.INFO, name(),"Prevented "+event.getPlayer().getName()+" from destroying an end portal!");
            }
        }
    }
}
