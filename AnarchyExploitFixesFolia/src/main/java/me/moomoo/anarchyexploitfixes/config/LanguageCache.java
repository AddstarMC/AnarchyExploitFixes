package me.moomoo.anarchyexploitfixes.config;

import me.moomoo.anarchyexploitfixes.AnarchyExploitFixes;
import net.kyori.adventure.text.Component;
import net.kyori.adventure.text.minimessage.MiniMessage;
import org.bukkit.configuration.InvalidConfigurationException;
import org.bukkit.configuration.file.FileConfiguration;
import org.bukkit.configuration.file.YamlConfiguration;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

public class LanguageCache {

    private final FileConfiguration fileConfiguration;
    private final MiniMessage miniMessage;
    boolean addedMissing = false;

    public Component no_permission, chat_commandwhitelist_badcommand, options1b1t_youNeedToBeXBlocksAwayToTP,
            chat_antispam_slowmodeNotif, chat_antispam_tooManyMsgsNotif, chat_antispam_duplicateMsgsNotif, misc_joinMessage, misc_leaveMessage,
            misc_MaskedKickMessage, preventions_witherSpawningDisabledInRadius, misc_enabledConnectionMsgs, misc_disabledConnectionMsgs, disablePacketElytraFly,
            elytra_global_YouAreFlyingIn, elytra_global_New, elytra_global_New_UpperCase, elytra_global_New_Color, elytra_global_Old, elytra_global_Old_UpperCase,
            elytra_global_Old_Color, elytra_global_Speed, elytra_global_DisabledLowTPS, elytra_global_TooFastLowTPS, elytra_global_TooFastChunkInfo,
            elytra_global_TooFast, elytra_global_DisabledHere, elytra_global_Chunks, elytra_ceiling_DisabledHere, elytra_ceiling_Chunks, elytra_ceiling_YouAreFlyingIn,
            elytra_ceiling_New, elytra_ceiling_New_UpperCase, elytra_ceiling_New_Color, elytra_ceiling_Old, elytra_ceiling_Old_UpperCase, elytra_ceiling_Old_Color,
            elytra_ceiling_Speed, elytra_ceiling_DisabledLowTPS, elytra_ceiling_TooFastLowTPS, elytra_ceiling_TooFastChunkInfo, elytra_ceiling_TooFast, elytra_spawn_DisabledHere,
            elytra_spawn_YouAreFlyingIn, elytra_spawn_New, elytra_spawn_New_UpperCase, elytra_spawn_New_Color, elytra_spawn_Old, elytra_spawn_Old_UpperCase, elytra_spawn_Old_Color,
            elytra_spawn_Speed, elytra_spawn_DisabledLowTPS, elytra_spawn_TooFast, elytra_spawn_TooFastChunkInfo, elytra_spawn_Chunks, lagpreventions_stopSpammingLevers;
    public List<Component> misc_firstJoinMessage, help_Message;

    public LanguageCache(String lang) {
        AnarchyExploitFixes plugin = AnarchyExploitFixes.getInstance();
        File langFile = new File(plugin.getDataFolder() + File.separator + "lang", lang + ".yml");
        this.fileConfiguration = new YamlConfiguration();
        this.miniMessage = MiniMessage.miniMessage();

        if (!langFile.exists()) {
            langFile.getParentFile().mkdirs();
            plugin.saveResource("lang" + File.separator + lang + ".yml", false);
        }
        try {
            fileConfiguration.load(langFile);

            // No Permission
            this.no_permission = getComponentTranslation("no-permission", "<red>You don't have permission to use this command.");
            // Chat
            this.chat_antispam_slowmodeNotif = getComponentTranslation("chat.antispam.slowmode-notification", "<red>You need to wait a bit before sending another message.");
            this.chat_antispam_tooManyMsgsNotif = getComponentTranslation("chat.antispam.too-many-messages-notification", "<red>You're sending too many messages at a time.");
            this.chat_antispam_duplicateMsgsNotif = getComponentTranslation("chat.antispam.same-message-notification", "<red>You're sending too many duplicate messages at a time.");
            this.chat_commandwhitelist_badcommand = getComponentTranslation("command-whitelist.bad-command", "<dark_red>Bad command. Type /help for a list of commands.");
            // Misc
            this.misc_joinMessage = getComponentTranslation("join-leave-messages.join", "<gray>%player% joined the game.");
            this.misc_leaveMessage = getComponentTranslation("join-leave-messages.leave", "<gray>%player% left the game.");
            this.misc_enabledConnectionMsgs = getComponentTranslation("join-leave-messages.enabled-connection-msgs", "<gray>Enabled connection msgs");
            this.misc_disabledConnectionMsgs = getComponentTranslation("join-leave-messages.disabled-connection-msgs", "<gray>Disabled connection msgs");
            this.misc_firstJoinMessage = getComponentListTranslation("join-leave-messages.first-join", List.of("<gray>%player% joined the game for the first time. They are %players_num% to join."));
            this.misc_MaskedKickMessage = getComponentTranslation("kicks.masked-kick-message", "<gold>Disconnected");
            // 1b1t Options
            this.options1b1t_youNeedToBeXBlocksAwayToTP = getComponentTranslation("1b1t-options.you-need-to-be-x-blocks-away-to-tp", "&9You need to be %blocks% blocks away from spawn to teleport!");
            // Disable Wither Spawning at Spawn
            this.preventions_witherSpawningDisabledInRadius = getComponentTranslation("withers.disabled-at-spawn", "<dark_red>Wither spawning is disabled in a radius of %radius% blocks around spawn.");
            /*
                Elytra
            */
            // Packet ElytraFly message
            this.disablePacketElytraFly = getComponentTranslation("elytra.disable-packet-elytrafly", "<red>Disable Packet Elytra Fly.");
            // Global
            this.elytra_global_DisabledHere = getComponentTranslation("elytra.elytra-speed.global.disabled-here", "<red>Elytras are currently disabled.");
            this.elytra_global_YouAreFlyingIn = getComponentTranslation("elytra.elytra-speed.global.you-are-flying-in", "<gray>You are flying in %neworold% <gray>%chunks%");
            this.elytra_global_New = getComponentTranslation("elytra.elytra-speed.global.new", "new");
            this.elytra_global_New_UpperCase = getUpperCaseComponentTranslation("elytra.elytra-speed.global.new", "new");
            this.elytra_global_New_Color = getComponentTranslation("elytra.elytra-speed.global.color-newchunks", "<dark_red>");
            this.elytra_global_Old = getComponentTranslation("elytra.elytra-speed.global.old", "old");
            this.elytra_global_Old_UpperCase = getUpperCaseComponentTranslation("elytra.elytra-speed.global.old", "old");
            this.elytra_global_Old_Color = getComponentTranslation("elytra.elytra-speed.global.color-oldchunks", "<green>");
            this.elytra_global_Speed = getComponentTranslation("elytra.elytra-speed.global.speed", "<gray>Speed: %speed% / %maxspeed%");
            this.elytra_global_DisabledLowTPS = getComponentTranslation("elytra.elytra-speed.global.disabled-low-tps", "<red>Elytras are currently disabled because the tps is lower than %tps%.");
            this.elytra_global_TooFastLowTPS = getComponentTranslation("elytra.elytra-speed.global.going-too-fast-low-tps", "<red>Elytra speed is reduced during low tps. Turn down your settings.");
            this.elytra_global_TooFastChunkInfo = getComponentTranslation("elytra.elytra-speed.global.going-too-fast-chunkinfo", "<red>Turn down your settings. Elytra speed is restricted in %neworold% %chunks%");
            this.elytra_global_TooFast = getComponentTranslation("elytra.elytra-speed.global.going-too-fast", "<red>Turn down your settings. Elytra speed is restricted on this server.");
            this.elytra_global_Chunks = getComponentTranslation("elytra.elytra-speed.global.chunks", "chunks");
            // Nether Ceiling
            this.elytra_ceiling_DisabledHere = getComponentTranslation("elytra.elytra-speed.nether-ceiling.disabled-here", "<red>Elytras are disabled on the nether ceiling.");
            this.elytra_ceiling_YouAreFlyingIn = getComponentTranslation("elytra.elytra-speed.nether-ceiling.you-are-flying-in", "<gray>You are flying in %neworold% <gray>%chunks%");
            this.elytra_ceiling_New = getComponentTranslation("elytra.elytra-speed.nether-ceiling.new", "new");
            this.elytra_ceiling_New_UpperCase = getUpperCaseComponentTranslation("elytra.elytra-speed.nether-ceiling.new", "new");
            this.elytra_ceiling_New_Color = getComponentTranslation("elytra.elytra-speed.nether-ceiling.color-newchunks", "<dark_red>");
            this.elytra_ceiling_Old = getComponentTranslation("elytra.elytra-speed.nether-ceiling.old", "old");
            this.elytra_ceiling_Old_UpperCase = getUpperCaseComponentTranslation("elytra.elytra-speed.nether-ceiling.old", "old");
            this.elytra_ceiling_Old_Color = getComponentTranslation("elytra.elytra-speed.nether-ceiling.color-oldchunks", "<green>");
            this.elytra_ceiling_Speed = getComponentTranslation("elytra.elytra-speed.nether-ceiling.speed", "<gray>Speed: %speed% / %maxspeed%");
            this.elytra_ceiling_DisabledLowTPS = getComponentTranslation("elytra.elytra-speed.nether-ceiling.disabled-low-tps", "<red>Elytras are currently disabled because the tps is lower than %tps%.");
            this.elytra_ceiling_TooFastLowTPS = getComponentTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast-low-tps", "<red>Elytra speed is reduced during low tps. Turn down your settings.");
            this.elytra_ceiling_TooFastChunkInfo = getComponentTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast-chunkinfo", "<red>Turn down your settings. Elytra speed is restricted in %neworold% %chunks%");
            this.elytra_ceiling_TooFast = getComponentTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast", "<red>Turn down your settings. Elytra speed is restricted on the nether ceiling.");
            this.elytra_ceiling_Chunks = getComponentTranslation("elytra.elytra-speed.nether-ceiling.chunks", "ceiling chunks");
            // Spawn
            this.elytra_spawn_DisabledHere = getComponentTranslation("elytra.elytra-speed.spawn.disabled-here", "<red>Elytras are disabled in a range of <gold>%range% <red>blocks around spawn.");
            this.elytra_spawn_YouAreFlyingIn = getComponentTranslation("elytra.elytra-speed.spawn.you-are-flying-in", "<gray>You are flying in %neworold% <gray>%chunks%");
            this.elytra_spawn_New = getComponentTranslation("elytra.elytra-speed.spawn.new", "new");
            this.elytra_spawn_New_UpperCase = getUpperCaseComponentTranslation("elytra.elytra-speed.spawn.new", "new");
            this.elytra_spawn_New_Color = getComponentTranslation("elytra.elytra-speed.spawn.color-newchunks", "<dark_red>");
            this.elytra_spawn_Old = getComponentTranslation("elytra.elytra-speed.spawn.old", "old");
            this.elytra_spawn_Old_UpperCase = getUpperCaseComponentTranslation("elytra.elytra-speed.spawn.old", "old");
            this.elytra_spawn_Old_Color = getComponentTranslation("elytra.elytra-speed.spawn.color-oldchunks", "<green>");
            this.elytra_spawn_Speed = getComponentTranslation("elytra.elytra-speed.spawn.speed", "<gray>Speed: %speed% / %maxspeed%");
            this.elytra_spawn_DisabledLowTPS = getComponentTranslation("elytra.elytra-speed.spawn.disabled-low-tps", "<red>Elytras are currently disabled because the tps is lower than %tps%.");
            this.elytra_spawn_TooFastChunkInfo = getComponentTranslation("elytra.elytra-speed.spawn.going-too-fast-chunkinfo", "<red>Elytra speed is restricted in %neworold% %chunks% in a radius of %radius% blocks.");
            this.elytra_spawn_TooFast = getComponentTranslation("elytra.elytra-speed.nether-ceiling.going-too-fast", "<red>Elytra speed is restricted in a radius of %radius% blocks around spawn.");
            this.elytra_spawn_Chunks = getComponentTranslation("elytra.elytra-speed.spawn.chunks", "spawn chunks");
            // Lag Preventions
            this.lagpreventions_stopSpammingLevers = getComponentTranslation("redstone.stop-spamming-levers", "<red>Stop spamming levers.");
            // Help Message
            this.help_Message = getComponentListTranslation("commands.help-command", List.of(
                    "<dark_aqua>----------------------------------------------------",
                    "<gray>/toggleconnectionmsgs <dark_gray>- <gray>Turns off join messages",
                    "<gray>/toggledeathmsgs <dark_gray>- <gray>Turns off death messages",
                    "<gray>/toggletells <dark_gray>- <gray>Turns off private messages",
                    "<gray>/togglechat <dark_gray>- <gray>Turns off chat messages",
                    "<gray>/ignore <dark_gray>- <gray>Ignore certain players",
                    "<gray>/seed <dark_gray>- <gray>Shows the server seed",
                    "<gray>/kill <dark_gray>- <gray>Kills you",
                    "<gray>/reply <dark_gray>- <gray>Reply to messages",
                    "<gray>/msg <dark_gray>- <gray>Message other players",
                    "<gray>/stats <dark_gray>- <gray>Shows world statistics",
                    "<dark_aqua>----------------------------------------------------"
            ));

            if (addedMissing) fileConfiguration.save(langFile);
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InvalidConfigurationException e) {
            AnarchyExploitFixes.getLog().warning("Translation file " + langFile + " is not formatted properly. Skipping it.");
        }
    }

    public Component getUpperCaseComponentTranslation(String path, String defaultTranslation) {
        String translation = fileConfiguration.getString(path);
        if (translation == null) {
            fileConfiguration.set(path, defaultTranslation);
            addedMissing = true;
            return miniMessage.deserialize(defaultTranslation.toUpperCase());
        }
        return miniMessage.deserialize(translation.toUpperCase());
    }

    public Component getComponentTranslation(String path, String defaultTranslation) {
        String translation = fileConfiguration.getString(path);
        if (translation == null) {
            fileConfiguration.set(path, defaultTranslation);
            addedMissing = true;
            return miniMessage.deserialize(defaultTranslation);
        }
        return miniMessage.deserialize(translation);
    }

    public List<Component> getComponentListTranslation(String path, List<String> defaultTranslation) {
        List<String> translation = fileConfiguration.getStringList(path);
        if (translation.isEmpty()) {
            fileConfiguration.set(path, defaultTranslation);
            addedMissing = true;
            translation = defaultTranslation;
        }
        List<Component> listAsComponent = new ArrayList<>();
        for (String line : translation) {
            listAsComponent.add(miniMessage.deserialize(line));
        }
        return listAsComponent;
    }
}
